apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
apply plugin: 'signing'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ['-module-name', "rxlcemodel-${project.name}"]
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

project.sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':rx')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    api 'com.jakewharton:disklrucache:2.0.2'

    testImplementation "junit:junit:${commonLibVersions.junit}"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${commonLibVersions.mockito_kotlin}"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}

def libId = 'disklrucache'
def libName = 'disklrucache'
def libDesc = "Jake Wharton's DiskLruCache delegate for RxLceModel"

publishing {
    publications {
        // Creates a Maven publication called "release".
        release(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId = rootProject.group
            artifactId = libId
            version = rootProject.version

            pom {
                name = libName
                description = libDesc
                url = projectUrl
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = projectScm
                    developerConnection = projectScm
                    url = projectUrl
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}
