apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'kotlinx-serialization'

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ['-module-name', "rxlcemodel-${project.name}"]
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

project.sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}

//publish {
//    userOrg = bintrayUserOrg
//    repoName = bintrayRepoName
//    groupId = rootProject.group
//    publishVersion = rootProject.version
//    artifactId = 'kserializer'
//    desc = "Kotlin cross-platform serialization for disklrucache delegate"
//    website = 'https://github.com/motorro/RxLceModel'
//}
project.ext {
    KOTLINX_SERIALIZATION_VERSION = '1.0.0-RC2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':base')
    implementation project(':disklrucache')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-serialization-core:${KOTLINX_SERIALIZATION_VERSION}"
    api "org.jetbrains.kotlinx:kotlinx-serialization-json:${KOTLINX_SERIALIZATION_VERSION}"
    api "org.jetbrains.kotlinx:kotlinx-serialization-cbor:${KOTLINX_SERIALIZATION_VERSION}"

    testImplementation "junit:junit:${commonLibVersions.junit}"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${commonLibVersions.mockito_kotlin}"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}
