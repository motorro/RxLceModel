[{"name":"fun <DATA : Any> LceStateView(viewState: LceState<DATA>, onRefresh: () -> Unit, loading: () -> Unit, fatalError: (error: Throwable) -> Unit, nonFatalError: (error: Throwable) -> Unit, termination: () -> Unit, isFatalError: (LceState.Error<DATA>) -> Boolean = { null == it.data }, content: (data: DATA, isValid: Boolean, refreshing: Boolean) -> Unit)","description":"com.motorro.rxlcemodel.composeview.LceStateView","location":"composeview/com.motorro.rxlcemodel.composeview/-lce-state-view.html","searchKeys":["LceStateView","fun <DATA : Any> LceStateView(viewState: LceState<DATA>, onRefresh: () -> Unit, loading: () -> Unit, fatalError: (error: Throwable) -> Unit, nonFatalError: (error: Throwable) -> Unit, termination: () -> Unit, isFatalError: (LceState.Error<DATA>) -> Boolean = { null == it.data }, content: (data: DATA, isValid: Boolean, refreshing: Boolean) -> Unit)","com.motorro.rxlcemodel.composeview.LceStateView"]},{"name":"fun SwipeRefresh(refreshing: Boolean, onRefresh: () -> Unit, content: () -> Unit)","description":"com.motorro.rxlcemodel.composeview.view.SwipeRefresh","location":"composeview/com.motorro.rxlcemodel.composeview.view/-swipe-refresh.html","searchKeys":["SwipeRefresh","fun SwipeRefresh(refreshing: Boolean, onRefresh: () -> Unit, content: () -> Unit)","com.motorro.rxlcemodel.composeview.view.SwipeRefresh"]},{"name":"inline fun <DATA : Any, MODEL : BaseLceModel<DATA>> initializeModel(modelStoreOwner: ViewModelStoreOwner = checkNotNull(LocalViewModelStoreOwner.current) {\n        \"No ViewModelStoreOwner was provided via LocalViewModelStoreOwner\"\n    }, init: MODEL.() -> Unit = { initialize() }): MODEL","description":"com.motorro.rxlcemodel.composeview.initializeModel","location":"composeview/com.motorro.rxlcemodel.composeview/initialize-model.html","searchKeys":["initializeModel","inline fun <DATA : Any, MODEL : BaseLceModel<DATA>> initializeModel(modelStoreOwner: ViewModelStoreOwner = checkNotNull(LocalViewModelStoreOwner.current) {\n        \"No ViewModelStoreOwner was provided via LocalViewModelStoreOwner\"\n    }, init: MODEL.() -> Unit = { initialize() }): MODEL","com.motorro.rxlcemodel.composeview.initializeModel"]},{"name":"abstract class BaseLceModel<DATA : Any> : BaseViewModel","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/index.html","searchKeys":["BaseLceModel","abstract class BaseLceModel<DATA : Any> : BaseViewModel","com.motorro.rxlcemodel.viewmodel.BaseLceModel"]},{"name":"abstract class BaseViewModel : ViewModel","description":"com.motorro.rxlcemodel.viewmodel.BaseViewModel","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-view-model/index.html","searchKeys":["BaseViewModel","abstract class BaseViewModel : ViewModel","com.motorro.rxlcemodel.viewmodel.BaseViewModel"]},{"name":"abstract class Impl<DATA : Any> : BaseLceModel<DATA> ","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-impl/index.html","searchKeys":["Impl","abstract class Impl<DATA : Any> : BaseLceModel<DATA> ","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl"]},{"name":"abstract fun doClear()","description":"com.motorro.rxlcemodel.viewmodel.BaseViewModel.doClear","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-view-model/do-clear.html","searchKeys":["doClear","abstract fun doClear()","com.motorro.rxlcemodel.viewmodel.BaseViewModel.doClear"]},{"name":"abstract fun getLifecycleOwner(): LifecycleOwner","description":"com.motorro.rxlcemodel.view.LceStateView.getLifecycleOwner","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/get-lifecycle-owner.html","searchKeys":["getLifecycleOwner","abstract fun getLifecycleOwner(): LifecycleOwner","com.motorro.rxlcemodel.view.LceStateView.getLifecycleOwner"]},{"name":"abstract fun refresh()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.refresh","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/refresh.html","searchKeys":["refresh","abstract fun refresh()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.refresh"]},{"name":"abstract fun restart()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.restart","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/restart.html","searchKeys":["restart","abstract fun restart()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.restart"]},{"name":"abstract fun showContent()","description":"com.motorro.rxlcemodel.view.LceStateView.showContent","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/show-content.html","searchKeys":["showContent","abstract fun showContent()","com.motorro.rxlcemodel.view.LceStateView.showContent"]},{"name":"abstract fun showError(error: Throwable)","description":"com.motorro.rxlcemodel.view.LceStateView.showError","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/show-error.html","searchKeys":["showError","abstract fun showError(error: Throwable)","com.motorro.rxlcemodel.view.LceStateView.showError"]},{"name":"abstract fun showLoading()","description":"com.motorro.rxlcemodel.view.LceStateView.showLoading","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/show-loading.html","searchKeys":["showLoading","abstract fun showLoading()","com.motorro.rxlcemodel.view.LceStateView.showLoading"]},{"name":"abstract val state: LiveData<LceState<DATA>>","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.state","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/state.html","searchKeys":["state","abstract val state: LiveData<LceState<DATA>>","com.motorro.rxlcemodel.viewmodel.BaseLceModel.state"]},{"name":"class UnhandledException(cause: Throwable, message: String? = null) : RuntimeException","description":"com.motorro.rxlcemodel.viewmodel.error.UnhandledException","location":"viewmodel/com.motorro.rxlcemodel.viewmodel.error/-unhandled-exception/index.html","searchKeys":["UnhandledException","class UnhandledException(cause: Throwable, message: String? = null) : RuntimeException","com.motorro.rxlcemodel.viewmodel.error.UnhandledException"]},{"name":"fun <DATA : Any> WithUpdates(dataUseCase: LceUseCase<DATA>)","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.WithUpdates.WithUpdates","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-with-updates/-with-updates.html","searchKeys":["WithUpdates","fun <DATA : Any> WithUpdates(dataUseCase: LceUseCase<DATA>)","com.motorro.rxlcemodel.viewmodel.BaseLceModel.WithUpdates.WithUpdates"]},{"name":"fun <DATA : Any> create(stateObservable: Observable<LceState<DATA>>, refresh: Completable): BaseLceModel<DATA>","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Companion.create","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-companion/create.html","searchKeys":["create","fun <DATA : Any> create(stateObservable: Observable<LceState<DATA>>, refresh: Completable): BaseLceModel<DATA>","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Companion.create"]},{"name":"fun <DATA : Any> create(useCase: LceUseCase<DATA>): BaseLceModel<DATA>","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Companion.create","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-companion/create.html","searchKeys":["create","fun <DATA : Any> create(useCase: LceUseCase<DATA>): BaseLceModel<DATA>","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Companion.create"]},{"name":"fun BaseLceModel()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.BaseLceModel","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-base-lce-model.html","searchKeys":["BaseLceModel","fun BaseLceModel()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.BaseLceModel"]},{"name":"fun BaseViewModel()","description":"com.motorro.rxlcemodel.viewmodel.BaseViewModel.BaseViewModel","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-view-model/-base-view-model.html","searchKeys":["BaseViewModel","fun BaseViewModel()","com.motorro.rxlcemodel.viewmodel.BaseViewModel.BaseViewModel"]},{"name":"fun Impl()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.Impl","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-impl/-impl.html","searchKeys":["Impl","fun Impl()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.Impl"]},{"name":"fun UnhandledException(cause: Throwable, message: String? = null)","description":"com.motorro.rxlcemodel.viewmodel.error.UnhandledException.UnhandledException","location":"viewmodel/com.motorro.rxlcemodel.viewmodel.error/-unhandled-exception/-unhandled-exception.html","searchKeys":["UnhandledException","fun UnhandledException(cause: Throwable, message: String? = null)","com.motorro.rxlcemodel.viewmodel.error.UnhandledException.UnhandledException"]},{"name":"fun dismissCurrentError()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.dismissCurrentError","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/dismiss-current-error.html","searchKeys":["dismissCurrentError","fun dismissCurrentError()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.dismissCurrentError"]},{"name":"fun initialize()","description":"com.motorro.rxlcemodel.viewmodel.BaseViewModel.initialize","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-view-model/initialize.html","searchKeys":["initialize","fun initialize()","com.motorro.rxlcemodel.viewmodel.BaseViewModel.initialize"]},{"name":"inline fun <DATA : Any, MODEL : BaseLceModel<DATA>> LceStateView<DATA>.initializeModel(modelStoreOwner: ViewModelStoreOwner, init: MODEL.() -> Unit = { initialize() }): MODEL","description":"com.motorro.rxlcemodel.view.initializeModel","location":"viewmodel/com.motorro.rxlcemodel.view/initialize-model.html","searchKeys":["initializeModel","inline fun <DATA : Any, MODEL : BaseLceModel<DATA>> LceStateView<DATA>.initializeModel(modelStoreOwner: ViewModelStoreOwner, init: MODEL.() -> Unit = { initialize() }): MODEL","com.motorro.rxlcemodel.view.initializeModel"]},{"name":"interface LceStateView<DATA : Any>","description":"com.motorro.rxlcemodel.view.LceStateView","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/index.html","searchKeys":["LceStateView","interface LceStateView<DATA : Any>","com.motorro.rxlcemodel.view.LceStateView"]},{"name":"object Companion","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Companion","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-companion/index.html","searchKeys":["Companion","object Companion","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Companion"]},{"name":"open class WithUpdates<DATA : Any>(dataUseCase: LceUseCase<DATA>) : BaseLceModel.Impl<DATA> ","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.WithUpdates","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-with-updates/index.html","searchKeys":["WithUpdates","open class WithUpdates<DATA : Any>(dataUseCase: LceUseCase<DATA>) : BaseLceModel.Impl<DATA> ","com.motorro.rxlcemodel.viewmodel.BaseLceModel.WithUpdates"]},{"name":"open fun dismissError(error: Throwable)","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.dismissError","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/dismiss-error.html","searchKeys":["dismissError","open fun dismissError(error: Throwable)","com.motorro.rxlcemodel.viewmodel.BaseLceModel.dismissError"]},{"name":"open fun isFatal(error: LceState.Error<DATA>): Boolean","description":"com.motorro.rxlcemodel.view.LceStateView.isFatal","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/is-fatal.html","searchKeys":["isFatal","open fun isFatal(error: LceState.Error<DATA>): Boolean","com.motorro.rxlcemodel.view.LceStateView.isFatal"]},{"name":"open fun processState(state: LceState<DATA>)","description":"com.motorro.rxlcemodel.view.LceStateView.processState","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/process-state.html","searchKeys":["processState","open fun processState(state: LceState<DATA>)","com.motorro.rxlcemodel.view.LceStateView.processState"]},{"name":"open fun processStateData(data: DATA, isValid: Boolean, isUpdating: Boolean)","description":"com.motorro.rxlcemodel.view.LceStateView.processStateData","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/process-state-data.html","searchKeys":["processStateData","open fun processStateData(data: DATA, isValid: Boolean, isUpdating: Boolean)","com.motorro.rxlcemodel.view.LceStateView.processStateData"]},{"name":"open fun processStateView(state: LceState<DATA>)","description":"com.motorro.rxlcemodel.view.LceStateView.processStateView","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/process-state-view.html","searchKeys":["processStateView","open fun processStateView(state: LceState<DATA>)","com.motorro.rxlcemodel.view.LceStateView.processStateView"]},{"name":"open fun processTermination()","description":"com.motorro.rxlcemodel.view.LceStateView.processTermination","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/process-termination.html","searchKeys":["processTermination","open fun processTermination()","com.motorro.rxlcemodel.view.LceStateView.processTermination"]},{"name":"open fun showNonFatalError(error: Throwable)","description":"com.motorro.rxlcemodel.view.LceStateView.showNonFatalError","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/show-non-fatal-error.html","searchKeys":["showNonFatalError","open fun showNonFatalError(error: Throwable)","com.motorro.rxlcemodel.view.LceStateView.showNonFatalError"]},{"name":"open fun showRefreshing(type: LceState.Loading.Type)","description":"com.motorro.rxlcemodel.view.LceStateView.showRefreshing","location":"viewmodel/com.motorro.rxlcemodel.view/-lce-state-view/show-refreshing.html","searchKeys":["showRefreshing","open fun showRefreshing(type: LceState.Loading.Type)","com.motorro.rxlcemodel.view.LceStateView.showRefreshing"]},{"name":"open override fun doClear()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.doClear","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-impl/do-clear.html","searchKeys":["doClear","open override fun doClear()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.doClear"]},{"name":"open override fun refresh()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.refresh","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-impl/refresh.html","searchKeys":["refresh","open override fun refresh()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.refresh"]},{"name":"open override fun restart()","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.restart","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-impl/restart.html","searchKeys":["restart","open override fun restart()","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.restart"]},{"name":"open override val state: LiveData<LceState<DATA>>","description":"com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.state","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-lce-model/-impl/state.html","searchKeys":["state","open override val state: LiveData<LceState<DATA>>","com.motorro.rxlcemodel.viewmodel.BaseLceModel.Impl.state"]},{"name":"var cleared: Boolean = false","description":"com.motorro.rxlcemodel.viewmodel.BaseViewModel.cleared","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-view-model/cleared.html","searchKeys":["cleared","var cleared: Boolean = false","com.motorro.rxlcemodel.viewmodel.BaseViewModel.cleared"]},{"name":"var initialized: Boolean = false","description":"com.motorro.rxlcemodel.viewmodel.BaseViewModel.initialized","location":"viewmodel/com.motorro.rxlcemodel.viewmodel/-base-view-model/initialized.html","searchKeys":["initialized","var initialized: Boolean = false","com.motorro.rxlcemodel.viewmodel.BaseViewModel.initialized"]},{"name":"class DiskLruCacheProvider(directory: File, appVersion: Int, maxSize: Long)","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheProvider","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/-disk-lru-cache-provider/index.html","searchKeys":["DiskLruCacheProvider","class DiskLruCacheProvider(directory: File, appVersion: Int, maxSize: Long)","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheProvider"]},{"name":"class DiskLruCacheSyncDelegate<D : Any> constructor(prefix: String, sd: CacheDelegateSerializerDeserializer<D>, cacheProvider: DiskLruCacheSyncDelegate.DiskLruCacheProvider, clock: Clock = Clock.SYSTEM) : SyncDelegateCacheService.Delegate<D, String> ","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/index.html","searchKeys":["DiskLruCacheSyncDelegate","class DiskLruCacheSyncDelegate<D : Any> constructor(prefix: String, sd: CacheDelegateSerializerDeserializer<D>, cacheProvider: DiskLruCacheSyncDelegate.DiskLruCacheProvider, clock: Clock = Clock.SYSTEM) : SyncDelegateCacheService.Delegate<D, String> ","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate"]},{"name":"fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<D>): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.createDelegate","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/create-delegate.html","searchKeys":["createDelegate","fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<D>): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.createDelegate"]},{"name":"fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createNormalizedDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<DataWithCacheKey<D>>): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.createNormalizedDelegate","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/create-normalized-delegate.html","searchKeys":["createNormalizedDelegate","fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createNormalizedDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<DataWithCacheKey<D>>): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.createNormalizedDelegate"]},{"name":"fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate<D>.normalizeParams(prefix: String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.normalizeParams","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/normalize-params.html","searchKeys":["normalizeParams","fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate<D>.normalizeParams(prefix: String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.normalizeParams"]},{"name":"fun <D : Any> DiskLruCacheSyncDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<D>, cacheProvider: DiskLruCacheSyncDelegate.DiskLruCacheProvider, clock: Clock = Clock.SYSTEM)","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheSyncDelegate","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/-disk-lru-cache-sync-delegate.html","searchKeys":["DiskLruCacheSyncDelegate","fun <D : Any> DiskLruCacheSyncDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<D>, cacheProvider: DiskLruCacheSyncDelegate.DiskLruCacheProvider, clock: Clock = Clock.SYSTEM)","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheSyncDelegate"]},{"name":"fun <T : Any> createDefaultDelegatePrefix(cls: Class<T>): String","description":"com.motorro.rxlcemodel.disklrucache.createDefaultDelegatePrefix","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/create-default-delegate-prefix.html","searchKeys":["createDefaultDelegatePrefix","fun <T : Any> createDefaultDelegatePrefix(cls: Class<T>): String","com.motorro.rxlcemodel.disklrucache.createDefaultDelegatePrefix"]},{"name":"fun CacheFriend.getNormalizedKey(prefix: String): String","description":"com.motorro.rxlcemodel.disklrucache.getNormalizedKey","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/get-normalized-key.html","searchKeys":["getNormalizedKey","fun CacheFriend.getNormalizedKey(prefix: String): String","com.motorro.rxlcemodel.disklrucache.getNormalizedKey"]},{"name":"fun DiskLruCacheProvider(directory: File, appVersion: Int, maxSize: Long)","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheProvider.DiskLruCacheProvider","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/-disk-lru-cache-provider/-disk-lru-cache-provider.html","searchKeys":["DiskLruCacheProvider","fun DiskLruCacheProvider(directory: File, appVersion: Int, maxSize: Long)","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheProvider.DiskLruCacheProvider"]},{"name":"inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<D>, crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.createDelegate","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/create-delegate.html","searchKeys":["createDelegate","inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<D>, crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.createDelegate"]},{"name":"inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createNormalizedDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<DataWithCacheKey<D>>, crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.createNormalizedDelegate","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/create-normalized-delegate.html","searchKeys":["createNormalizedDelegate","inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.createNormalizedDelegate(prefix: String, sd: CacheDelegateSerializerDeserializer<DataWithCacheKey<D>>, crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.createNormalizedDelegate"]},{"name":"inline fun <D : Serializable, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStream(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.withObjectStream","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/with-object-stream.html","searchKeys":["withObjectStream","inline fun <D : Serializable, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStream(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.withObjectStream"]},{"name":"inline fun <D : Serializable, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStream(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.withObjectStream","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/with-object-stream.html","searchKeys":["withObjectStream","inline fun <D : Serializable, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStream(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.withObjectStream"]},{"name":"inline fun <D : Serializable, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStreamNormalized(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.withObjectStreamNormalized","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/with-object-stream-normalized.html","searchKeys":["withObjectStreamNormalized","inline fun <D : Serializable, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStreamNormalized(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.withObjectStreamNormalized"]},{"name":"inline fun <D : Serializable, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStreamNormalized(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.disklrucache.withObjectStreamNormalized","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/with-object-stream-normalized.html","searchKeys":["withObjectStreamNormalized","inline fun <D : Serializable, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withObjectStreamNormalized(validatorFactory: EntityValidatorFactory, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.disklrucache.withObjectStreamNormalized"]},{"name":"object Companion","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.Companion","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/-companion/index.html","searchKeys":["Companion","object Companion","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.Companion"]},{"name":"open override fun delete(params: String)","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.delete","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/delete.html","searchKeys":["delete","open override fun delete(params: String)","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.delete"]},{"name":"open override fun get(params: String): Entity<D>?","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.get","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/get.html","searchKeys":["get","open override fun get(params: String): Entity<D>?","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.get"]},{"name":"open override fun invalidate(params: String)","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.invalidate","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/invalidate.html","searchKeys":["invalidate","open override fun invalidate(params: String)","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.invalidate"]},{"name":"open override fun invalidateAll()","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.invalidateAll","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/invalidate-all.html","searchKeys":["invalidateAll","open override fun invalidateAll()","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.invalidateAll"]},{"name":"open override fun save(params: String, entity: Entity<D>)","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.save","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/save.html","searchKeys":["save","open override fun save(params: String, entity: Entity<D>)","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.save"]},{"name":"val HEX_CHARS: CharArray","description":"com.motorro.rxlcemodel.disklrucache.HEX_CHARS","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-h-e-x_-c-h-a-r-s.html","searchKeys":["HEX_CHARS","val HEX_CHARS: CharArray","com.motorro.rxlcemodel.disklrucache.HEX_CHARS"]},{"name":"val cache: DiskLruCache","description":"com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheProvider.cache","location":"disklrucache/com.motorro.rxlcemodel.disklrucache/-disk-lru-cache-sync-delegate/-disk-lru-cache-provider/cache.html","searchKeys":["cache","val cache: DiskLruCache","com.motorro.rxlcemodel.disklrucache.DiskLruCacheSyncDelegate.DiskLruCacheProvider.cache"]},{"name":"ERROR","description":"com.motorro.rxlcemodel.base.LogLevel.ERROR","location":"base/com.motorro.rxlcemodel.base/-log-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","com.motorro.rxlcemodel.base.LogLevel.ERROR"]},{"name":"INFO","description":"com.motorro.rxlcemodel.base.LogLevel.INFO","location":"base/com.motorro.rxlcemodel.base/-log-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","com.motorro.rxlcemodel.base.LogLevel.INFO"]},{"name":"LOADING","description":"com.motorro.rxlcemodel.base.LceState.Loading.Type.LOADING","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/-type/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING","com.motorro.rxlcemodel.base.LceState.Loading.Type.LOADING"]},{"name":"LOADING_MORE","description":"com.motorro.rxlcemodel.base.LceState.Loading.Type.LOADING_MORE","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/-type/-l-o-a-d-i-n-g_-m-o-r-e/index.html","searchKeys":["LOADING_MORE","LOADING_MORE","com.motorro.rxlcemodel.base.LceState.Loading.Type.LOADING_MORE"]},{"name":"REFRESHING","description":"com.motorro.rxlcemodel.base.LceState.Loading.Type.REFRESHING","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/-type/-r-e-f-r-e-s-h-i-n-g/index.html","searchKeys":["REFRESHING","REFRESHING","com.motorro.rxlcemodel.base.LceState.Loading.Type.REFRESHING"]},{"name":"UPDATING","description":"com.motorro.rxlcemodel.base.LceState.Loading.Type.UPDATING","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/-type/-u-p-d-a-t-i-n-g/index.html","searchKeys":["UPDATING","UPDATING","com.motorro.rxlcemodel.base.LceState.Loading.Type.UPDATING"]},{"name":"WARNING","description":"com.motorro.rxlcemodel.base.LogLevel.WARNING","location":"base/com.motorro.rxlcemodel.base/-log-level/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","WARNING","com.motorro.rxlcemodel.base.LogLevel.WARNING"]},{"name":"abstract class MemorySyncDelegate<D : Any, P : Any> : SyncDelegateCacheService.Delegate<D, P> ","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/index.html","searchKeys":["MemorySyncDelegate","abstract class MemorySyncDelegate<D : Any, P : Any> : SyncDelegateCacheService.Delegate<D, P> ","com.motorro.rxlcemodel.base.service.MemorySyncDelegate"]},{"name":"abstract class UpdateWrapper<DATA : Any, PARAMS : Any>(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?) : LceModel<DATA, PARAMS> ","description":"com.motorro.rxlcemodel.base.UpdateWrapper","location":"base/com.motorro.rxlcemodel.base/-update-wrapper/index.html","searchKeys":["UpdateWrapper","abstract class UpdateWrapper<DATA : Any, PARAMS : Any>(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?) : LceModel<DATA, PARAMS> ","com.motorro.rxlcemodel.base.UpdateWrapper"]},{"name":"abstract fun <R : Any> map(mapper: (T) -> R): Entity<R>","description":"com.motorro.rxlcemodel.base.entity.Entity.map","location":"base/com.motorro.rxlcemodel.base.entity/-entity/map.html","searchKeys":["map","abstract fun <R : Any> map(mapper: (T) -> R): Entity<R>","com.motorro.rxlcemodel.base.entity.Entity.map"]},{"name":"abstract fun create(serialized: String? = null): EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidatorFactory.create","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator-factory/create.html","searchKeys":["create","abstract fun create(serialized: String? = null): EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidatorFactory.create"]},{"name":"abstract fun createSnapshot(serialized: String? = null): EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidatorFactory.createSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator-factory/create-snapshot.html","searchKeys":["createSnapshot","abstract fun createSnapshot(serialized: String? = null): EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidatorFactory.createSnapshot"]},{"name":"abstract fun delete(params: P)","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.delete","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/-delegate/delete.html","searchKeys":["delete","abstract fun delete(params: P)","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.delete"]},{"name":"abstract fun delete(params: P): Completable","description":"com.motorro.rxlcemodel.base.service.CacheService.delete","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/delete.html","searchKeys":["delete","abstract fun delete(params: P): Completable","com.motorro.rxlcemodel.base.service.CacheService.delete"]},{"name":"abstract fun deserialize(serialized: String): EntityValidator?","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Deserializer.deserialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-deserializer/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(serialized: String): EntityValidator?","com.motorro.rxlcemodel.base.entity.EntityValidator.Deserializer.deserialize"]},{"name":"abstract fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<D>?","description":"com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.deserializeSnapshot","location":"base/com.motorro.rxlcemodel.base.service/-cache-delegate-serializer-deserializer/deserialize-snapshot.html","searchKeys":["deserializeSnapshot","abstract fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<D>?","com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.deserializeSnapshot"]},{"name":"abstract fun get(params: P): Entity<D>?","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.get","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/-delegate/get.html","searchKeys":["get","abstract fun get(params: P): Entity<D>?","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.get"]},{"name":"abstract fun get(params: P): Single<Entity<D>>","description":"com.motorro.rxlcemodel.base.service.NetService.get","location":"base/com.motorro.rxlcemodel.base.service/-net-service/get.html","searchKeys":["get","abstract fun get(params: P): Single<Entity<D>>","com.motorro.rxlcemodel.base.service.NetService.get"]},{"name":"abstract fun getData(params: P): Observable<Optional<Entity<D>>>","description":"com.motorro.rxlcemodel.base.service.CacheService.getData","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/get-data.html","searchKeys":["getData","abstract fun getData(params: P): Observable<Optional<Entity<D>>>","com.motorro.rxlcemodel.base.service.CacheService.getData"]},{"name":"abstract fun getMillis(): Long","description":"com.motorro.rxlcemodel.base.entity.Clock.getMillis","location":"base/com.motorro.rxlcemodel.base.entity/-clock/get-millis.html","searchKeys":["getMillis","abstract fun getMillis(): Long","com.motorro.rxlcemodel.base.entity.Clock.getMillis"]},{"name":"abstract fun invalidate(params: P)","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.invalidate","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/-delegate/invalidate.html","searchKeys":["invalidate","abstract fun invalidate(params: P)","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.invalidate"]},{"name":"abstract fun invalidate(params: P): Completable","description":"com.motorro.rxlcemodel.base.service.CacheService.invalidate","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/invalidate.html","searchKeys":["invalidate","abstract fun invalidate(params: P): Completable","com.motorro.rxlcemodel.base.service.CacheService.invalidate"]},{"name":"abstract fun invalidateAll()","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.invalidateAll","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/-delegate/invalidate-all.html","searchKeys":["invalidateAll","abstract fun invalidateAll()","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.invalidateAll"]},{"name":"abstract fun isValid(): Boolean","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.isValid","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/is-valid.html","searchKeys":["isValid","abstract fun isValid(): Boolean","com.motorro.rxlcemodel.base.entity.EntityValidator.isValid"]},{"name":"abstract fun log(level: LogLevel, message: String)","description":"com.motorro.rxlcemodel.base.Logger.log","location":"base/com.motorro.rxlcemodel.base/-logger/log.html","searchKeys":["log","abstract fun log(level: LogLevel, message: String)","com.motorro.rxlcemodel.base.Logger.log"]},{"name":"abstract fun refetch(params: P): Completable","description":"com.motorro.rxlcemodel.base.service.CacheService.refetch","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/refetch.html","searchKeys":["refetch","abstract fun refetch(params: P): Completable","com.motorro.rxlcemodel.base.service.CacheService.refetch"]},{"name":"abstract fun save(params: P, entity: Entity<D>)","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.save","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/-delegate/save.html","searchKeys":["save","abstract fun save(params: P, entity: Entity<D>)","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate.save"]},{"name":"abstract fun save(params: P, entity: Entity<D>): Completable","description":"com.motorro.rxlcemodel.base.service.CacheService.save","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/save.html","searchKeys":["save","abstract fun save(params: P, entity: Entity<D>): Completable","com.motorro.rxlcemodel.base.service.CacheService.save"]},{"name":"abstract fun serialize(): String","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.serialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/serialize.html","searchKeys":["serialize","abstract fun serialize(): String","com.motorro.rxlcemodel.base.entity.EntityValidator.serialize"]},{"name":"abstract fun serialize(entity: Entity<D>, output: OutputStream)","description":"com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.serialize","location":"base/com.motorro.rxlcemodel.base.service/-cache-delegate-serializer-deserializer/serialize.html","searchKeys":["serialize","abstract fun serialize(entity: Entity<D>, output: OutputStream)","com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.serialize"]},{"name":"abstract fun update(params: P, update: U): Single<Entity<D>>","description":"com.motorro.rxlcemodel.base.service.UpdatingNetService.update","location":"base/com.motorro.rxlcemodel.base.service/-updating-net-service/update.html","searchKeys":["update","abstract fun update(params: P, update: U): Single<Entity<D>>","com.motorro.rxlcemodel.base.service.UpdatingNetService.update"]},{"name":"abstract fun update(update: UPDATE): Completable","description":"com.motorro.rxlcemodel.base.UpdatingLceModel.update","location":"base/com.motorro.rxlcemodel.base/-updating-lce-model/update.html","searchKeys":["update","abstract fun update(update: UPDATE): Completable","com.motorro.rxlcemodel.base.UpdatingLceModel.update"]},{"name":"abstract override fun createSnapshot(): Entity<T>","description":"com.motorro.rxlcemodel.base.entity.Entity.createSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity/create-snapshot.html","searchKeys":["createSnapshot","abstract override fun createSnapshot(): Entity<T>","com.motorro.rxlcemodel.base.entity.Entity.createSnapshot"]},{"name":"abstract override val net: UpdatingNetService<D, U, P>","description":"com.motorro.rxlcemodel.base.service.UpdatingServiceSet.net","location":"base/com.motorro.rxlcemodel.base.service/-updating-service-set/net.html","searchKeys":["net","abstract override val net: UpdatingNetService<D, U, P>","com.motorro.rxlcemodel.base.service.UpdatingServiceSet.net"]},{"name":"abstract val cache: CacheService<D, P>","description":"com.motorro.rxlcemodel.base.service.ServiceSet.cache","location":"base/com.motorro.rxlcemodel.base.service/-service-set/cache.html","searchKeys":["cache","abstract val cache: CacheService<D, P>","com.motorro.rxlcemodel.base.service.ServiceSet.cache"]},{"name":"abstract val close: Completable","description":"com.motorro.rxlcemodel.base.service.CacheManager.close","location":"base/com.motorro.rxlcemodel.base.service/-cache-manager/close.html","searchKeys":["close","abstract val close: Completable","com.motorro.rxlcemodel.base.service.CacheManager.close"]},{"name":"abstract val data: DATA?","description":"com.motorro.rxlcemodel.base.LceState.data","location":"base/com.motorro.rxlcemodel.base/-lce-state/data.html","searchKeys":["data","abstract val data: DATA?","com.motorro.rxlcemodel.base.LceState.data"]},{"name":"abstract val data: T","description":"com.motorro.rxlcemodel.base.entity.Entity.data","location":"base/com.motorro.rxlcemodel.base.entity/-entity/data.html","searchKeys":["data","abstract val data: T","com.motorro.rxlcemodel.base.entity.Entity.data"]},{"name":"abstract val dataIsValid: Boolean","description":"com.motorro.rxlcemodel.base.LceState.dataIsValid","location":"base/com.motorro.rxlcemodel.base/-lce-state/data-is-valid.html","searchKeys":["dataIsValid","abstract val dataIsValid: Boolean","com.motorro.rxlcemodel.base.LceState.dataIsValid"]},{"name":"abstract val delete: Completable","description":"com.motorro.rxlcemodel.base.service.CacheManager.delete","location":"base/com.motorro.rxlcemodel.base.service/-cache-manager/delete.html","searchKeys":["delete","abstract val delete: Completable","com.motorro.rxlcemodel.base.service.CacheManager.delete"]},{"name":"abstract val invalidateAll: Completable","description":"com.motorro.rxlcemodel.base.service.CacheService.invalidateAll","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/invalidate-all.html","searchKeys":["invalidateAll","abstract val invalidateAll: Completable","com.motorro.rxlcemodel.base.service.CacheService.invalidateAll"]},{"name":"abstract val net: NetService<D, P>","description":"com.motorro.rxlcemodel.base.service.ServiceSet.net","location":"base/com.motorro.rxlcemodel.base.service/-service-set/net.html","searchKeys":["net","abstract val net: NetService<D, P>","com.motorro.rxlcemodel.base.service.ServiceSet.net"]},{"name":"abstract val params: PARAMS","description":"com.motorro.rxlcemodel.base.LceModel.params","location":"base/com.motorro.rxlcemodel.base/-lce-model/params.html","searchKeys":["params","abstract val params: PARAMS","com.motorro.rxlcemodel.base.LceModel.params"]},{"name":"abstract val refetchAll: Completable","description":"com.motorro.rxlcemodel.base.service.CacheService.refetchAll","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/refetch-all.html","searchKeys":["refetchAll","abstract val refetchAll: Completable","com.motorro.rxlcemodel.base.service.CacheService.refetchAll"]},{"name":"abstract val refresh: Completable","description":"com.motorro.rxlcemodel.base.LceUseCase.refresh","location":"base/com.motorro.rxlcemodel.base/-lce-use-case/refresh.html","searchKeys":["refresh","abstract val refresh: Completable","com.motorro.rxlcemodel.base.LceUseCase.refresh"]},{"name":"abstract val state: Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.LceUseCase.state","location":"base/com.motorro.rxlcemodel.base/-lce-use-case/state.html","searchKeys":["state","abstract val state: Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.LceUseCase.state"]},{"name":"class CacheFriendDelegate<D : Any, P : CacheFriend>(delegate: SyncDelegateCacheService.Delegate<DataWithCacheKey<D>, P>) : SyncDelegateCacheService.Delegate<D, P> ","description":"com.motorro.rxlcemodel.base.service.CacheFriendDelegate","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend-delegate/index.html","searchKeys":["CacheFriendDelegate","class CacheFriendDelegate<D : Any, P : CacheFriend>(delegate: SyncDelegateCacheService.Delegate<DataWithCacheKey<D>, P>) : SyncDelegateCacheService.Delegate<D, P> ","com.motorro.rxlcemodel.base.service.CacheFriendDelegate"]},{"name":"class CacheThenNetLceModel<DATA : Any, PARAMS : Any>(val params: PARAMS, serviceSet: ServiceSet<DATA, PARAMS>, startWith: Observable<LceState<DATA>>, ioScheduler: Scheduler, logger: Logger?) : LceModel<DATA, PARAMS> ","description":"com.motorro.rxlcemodel.base.CacheThenNetLceModel","location":"base/com.motorro.rxlcemodel.base/-cache-then-net-lce-model/index.html","searchKeys":["CacheThenNetLceModel","class CacheThenNetLceModel<DATA : Any, PARAMS : Any>(val params: PARAMS, serviceSet: ServiceSet<DATA, PARAMS>, startWith: Observable<LceState<DATA>>, ioScheduler: Scheduler, logger: Logger?) : LceModel<DATA, PARAMS> ","com.motorro.rxlcemodel.base.CacheThenNetLceModel"]},{"name":"class Lifespan : EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/index.html","searchKeys":["Lifespan","class Lifespan : EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan"]},{"name":"class LifespanDeserializer constructor(clock: Clock = Clock.SYSTEM) : EntityValidator.Deserializer","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-lifespan-deserializer/index.html","searchKeys":["LifespanDeserializer","class LifespanDeserializer constructor(clock: Clock = Clock.SYSTEM) : EntityValidator.Deserializer","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer"]},{"name":"class LifespanValidatorFactory constructor(cacheTtl: Long, clock: Clock = Clock.SYSTEM) : EntityValidatorFactory","description":"com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory","location":"base/com.motorro.rxlcemodel.base.entity/-lifespan-validator-factory/index.html","searchKeys":["LifespanValidatorFactory","class LifespanValidatorFactory constructor(cacheTtl: Long, clock: Clock = Clock.SYSTEM) : EntityValidatorFactory","com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory"]},{"name":"class StrategyUpdateWrapper<DATA : Any, PARAMS : Any>(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?) : UpdateWrapper<DATA, PARAMS> ","description":"com.motorro.rxlcemodel.base.StrategyUpdateWrapper","location":"base/com.motorro.rxlcemodel.base/-strategy-update-wrapper/index.html","searchKeys":["StrategyUpdateWrapper","class StrategyUpdateWrapper<DATA : Any, PARAMS : Any>(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?) : UpdateWrapper<DATA, PARAMS> ","com.motorro.rxlcemodel.base.StrategyUpdateWrapper"]},{"name":"class SyncDelegateCacheService<D : Any, P : Any> : CacheService<D, P> ","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/index.html","searchKeys":["SyncDelegateCacheService","class SyncDelegateCacheService<D : Any, P : Any> : CacheService<D, P> ","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService"]},{"name":"class UpdatingLceModelWrapper<DATA : Any, in UPDATE : Any, PARAMS : Any>(upstream: LceModel<DATA, PARAMS>, serviceSet: UpdatingServiceSet<DATA, UPDATE, PARAMS>, ioScheduler: Scheduler, logger: Logger?) : UpdateWrapper<DATA, PARAMS> , UpdatingLceModel<DATA, UPDATE, PARAMS> ","description":"com.motorro.rxlcemodel.base.UpdatingLceModelWrapper","location":"base/com.motorro.rxlcemodel.base/-updating-lce-model-wrapper/index.html","searchKeys":["UpdatingLceModelWrapper","class UpdatingLceModelWrapper<DATA : Any, in UPDATE : Any, PARAMS : Any>(upstream: LceModel<DATA, PARAMS>, serviceSet: UpdatingServiceSet<DATA, UPDATE, PARAMS>, ioScheduler: Scheduler, logger: Logger?) : UpdateWrapper<DATA, PARAMS> , UpdatingLceModel<DATA, UPDATE, PARAMS> ","com.motorro.rxlcemodel.base.UpdatingLceModelWrapper"]},{"name":"class WithObjectStream<D : Serializable>(validatorFactory: EntityValidatorFactory, dataClass: Class<D>) : CacheDelegateSerializerDeserializer<D> ","description":"com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream","location":"base/com.motorro.rxlcemodel.base.service/-cache-delegate-serializer-deserializer/-with-object-stream/index.html","searchKeys":["WithObjectStream","class WithObjectStream<D : Serializable>(validatorFactory: EntityValidatorFactory, dataClass: Class<D>) : CacheDelegateSerializerDeserializer<D> ","com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream"]},{"name":"class WithObjectStreamAndCacheKey<D : Serializable>(validatorFactory: EntityValidatorFactory, dataClass: Class<D>) : CacheDelegateSerializerDeserializer<DataWithCacheKey<D>> ","description":"com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey","location":"base/com.motorro.rxlcemodel.base.service/-with-object-stream-and-cache-key/index.html","searchKeys":["WithObjectStreamAndCacheKey","class WithObjectStreamAndCacheKey<D : Serializable>(validatorFactory: EntityValidatorFactory, dataClass: Class<D>) : CacheDelegateSerializerDeserializer<DataWithCacheKey<D>> ","com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey"]},{"name":"data class Content<out DATA : Any>(val data: DATA, val dataIsValid: Boolean) : LceState<DATA> ","description":"com.motorro.rxlcemodel.base.LceState.Content","location":"base/com.motorro.rxlcemodel.base/-lce-state/-content/index.html","searchKeys":["Content","data class Content<out DATA : Any>(val data: DATA, val dataIsValid: Boolean) : LceState<DATA> ","com.motorro.rxlcemodel.base.LceState.Content"]},{"name":"data class DataWithCacheKey<D : Any>(val data: D, val cacheKey: String) : Serializable","description":"com.motorro.rxlcemodel.base.service.DataWithCacheKey","location":"base/com.motorro.rxlcemodel.base.service/-data-with-cache-key/index.html","searchKeys":["DataWithCacheKey","data class DataWithCacheKey<D : Any>(val data: D, val cacheKey: String) : Serializable","com.motorro.rxlcemodel.base.service.DataWithCacheKey"]},{"name":"data class Error<out DATA : Any>(val data: DATA?, val dataIsValid: Boolean, val error: Throwable) : LceState<DATA> ","description":"com.motorro.rxlcemodel.base.LceState.Error","location":"base/com.motorro.rxlcemodel.base/-lce-state/-error/index.html","searchKeys":["Error","data class Error<out DATA : Any>(val data: DATA?, val dataIsValid: Boolean, val error: Throwable) : LceState<DATA> ","com.motorro.rxlcemodel.base.LceState.Error"]},{"name":"data class Impl<out T : Any>(val data: T, validator: EntityValidator) : Entity<T> , EntityValidator","description":"com.motorro.rxlcemodel.base.entity.Entity.Impl","location":"base/com.motorro.rxlcemodel.base.entity/-entity/-impl/index.html","searchKeys":["Impl","data class Impl<out T : Any>(val data: T, validator: EntityValidator) : Entity<T> , EntityValidator","com.motorro.rxlcemodel.base.entity.Entity.Impl"]},{"name":"data class Loading<out DATA : Any> constructor(val data: DATA?, val dataIsValid: Boolean, val type: LceState.Loading.Type = Type.LOADING) : LceState<DATA> ","description":"com.motorro.rxlcemodel.base.LceState.Loading","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/index.html","searchKeys":["Loading","data class Loading<out DATA : Any> constructor(val data: DATA?, val dataIsValid: Boolean, val type: LceState.Loading.Type = Type.LOADING) : LceState<DATA> ","com.motorro.rxlcemodel.base.LceState.Loading"]},{"name":"data class Simple(valid: Boolean) : EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Simple","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-simple/index.html","searchKeys":["Simple","data class Simple(valid: Boolean) : EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidator.Simple"]},{"name":"enum LogLevel : Enum<LogLevel> ","description":"com.motorro.rxlcemodel.base.LogLevel","location":"base/com.motorro.rxlcemodel.base/-log-level/index.html","searchKeys":["LogLevel","enum LogLevel : Enum<LogLevel> ","com.motorro.rxlcemodel.base.LogLevel"]},{"name":"enum Type : Enum<LceState.Loading.Type> ","description":"com.motorro.rxlcemodel.base.LceState.Loading.Type","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/-type/index.html","searchKeys":["Type","enum Type : Enum<LceState.Loading.Type> ","com.motorro.rxlcemodel.base.LceState.Loading.Type"]},{"name":"fun <D : Any, P : Any> custom(map: MutableMap<P, Entity<D>>): MemorySyncDelegate<D, P>","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion.custom","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/-companion/custom.html","searchKeys":["custom","fun <D : Any, P : Any> custom(map: MutableMap<P, Entity<D>>): MemorySyncDelegate<D, P>","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion.custom"]},{"name":"fun <D : Any, P : Any> lru(maxEntries: Int, initialCapacity: Int = 16): MemorySyncDelegate<D, P>","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion.lru","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/-companion/lru.html","searchKeys":["lru","fun <D : Any, P : Any> lru(maxEntries: Int, initialCapacity: Int = 16): MemorySyncDelegate<D, P>","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion.lru"]},{"name":"fun <D : Any, P : Any> simple(initialCapacity: Int = 16): MemorySyncDelegate<D, P>","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion.simple","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/-companion/simple.html","searchKeys":["simple","fun <D : Any, P : Any> simple(initialCapacity: Int = 16): MemorySyncDelegate<D, P>","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion.simple"]},{"name":"fun <D : Any, P : Any> withSyncDelegate(delegate: SyncDelegateCacheService.Delegate<D, P>): SyncDelegateCacheService<D, P>","description":"com.motorro.rxlcemodel.base.service.CacheService.Companion.withSyncDelegate","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/-companion/with-sync-delegate.html","searchKeys":["withSyncDelegate","fun <D : Any, P : Any> withSyncDelegate(delegate: SyncDelegateCacheService.Delegate<D, P>): SyncDelegateCacheService<D, P>","com.motorro.rxlcemodel.base.service.CacheService.Companion.withSyncDelegate"]},{"name":"fun <D : Any, P : CacheFriend> CacheFriendDelegate(delegate: SyncDelegateCacheService.Delegate<DataWithCacheKey<D>, P>)","description":"com.motorro.rxlcemodel.base.service.CacheFriendDelegate.CacheFriendDelegate","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend-delegate/-cache-friend-delegate.html","searchKeys":["CacheFriendDelegate","fun <D : Any, P : CacheFriend> CacheFriendDelegate(delegate: SyncDelegateCacheService.Delegate<DataWithCacheKey<D>, P>)","com.motorro.rxlcemodel.base.service.CacheFriendDelegate.CacheFriendDelegate"]},{"name":"fun <D : Any> DataWithCacheKey(data: D, cacheKey: String)","description":"com.motorro.rxlcemodel.base.service.DataWithCacheKey.DataWithCacheKey","location":"base/com.motorro.rxlcemodel.base.service/-data-with-cache-key/-data-with-cache-key.html","searchKeys":["DataWithCacheKey","fun <D : Any> DataWithCacheKey(data: D, cacheKey: String)","com.motorro.rxlcemodel.base.service.DataWithCacheKey.DataWithCacheKey"]},{"name":"fun <D : Serializable> WithObjectStream(validatorFactory: EntityValidatorFactory, dataClass: Class<D>)","description":"com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream.WithObjectStream","location":"base/com.motorro.rxlcemodel.base.service/-cache-delegate-serializer-deserializer/-with-object-stream/-with-object-stream.html","searchKeys":["WithObjectStream","fun <D : Serializable> WithObjectStream(validatorFactory: EntityValidatorFactory, dataClass: Class<D>)","com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream.WithObjectStream"]},{"name":"fun <D : Serializable> WithObjectStreamAndCacheKey(validatorFactory: EntityValidatorFactory, dataClass: Class<D>)","description":"com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey.WithObjectStreamAndCacheKey","location":"base/com.motorro.rxlcemodel.base.service/-with-object-stream-and-cache-key/-with-object-stream-and-cache-key.html","searchKeys":["WithObjectStreamAndCacheKey","fun <D : Serializable> WithObjectStreamAndCacheKey(validatorFactory: EntityValidatorFactory, dataClass: Class<D>)","com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey.WithObjectStreamAndCacheKey"]},{"name":"fun <DATA : Any, PARAMS : Any> CacheThenNetLceModel(params: PARAMS, serviceSet: ServiceSet<DATA, PARAMS>, startWith: Observable<LceState<DATA>>, ioScheduler: Scheduler, logger: Logger?)","description":"com.motorro.rxlcemodel.base.CacheThenNetLceModel.CacheThenNetLceModel","location":"base/com.motorro.rxlcemodel.base/-cache-then-net-lce-model/-cache-then-net-lce-model.html","searchKeys":["CacheThenNetLceModel","fun <DATA : Any, PARAMS : Any> CacheThenNetLceModel(params: PARAMS, serviceSet: ServiceSet<DATA, PARAMS>, startWith: Observable<LceState<DATA>>, ioScheduler: Scheduler, logger: Logger?)","com.motorro.rxlcemodel.base.CacheThenNetLceModel.CacheThenNetLceModel"]},{"name":"fun <DATA : Any, PARAMS : Any> StrategyUpdateWrapper(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?)","description":"com.motorro.rxlcemodel.base.StrategyUpdateWrapper.StrategyUpdateWrapper","location":"base/com.motorro.rxlcemodel.base/-strategy-update-wrapper/-strategy-update-wrapper.html","searchKeys":["StrategyUpdateWrapper","fun <DATA : Any, PARAMS : Any> StrategyUpdateWrapper(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?)","com.motorro.rxlcemodel.base.StrategyUpdateWrapper.StrategyUpdateWrapper"]},{"name":"fun <DATA : Any, PARAMS : Any> UpdateWrapper(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?)","description":"com.motorro.rxlcemodel.base.UpdateWrapper.UpdateWrapper","location":"base/com.motorro.rxlcemodel.base/-update-wrapper/-update-wrapper.html","searchKeys":["UpdateWrapper","fun <DATA : Any, PARAMS : Any> UpdateWrapper(upstream: LceModel<DATA, PARAMS>, cacheService: CacheService<DATA, PARAMS>, ioScheduler: Scheduler, logger: Logger?)","com.motorro.rxlcemodel.base.UpdateWrapper.UpdateWrapper"]},{"name":"fun <DATA : Any, PARAMS : Any> cacheThenNet(params: PARAMS, net: NetService<DATA, PARAMS>, cache: CacheService<DATA, PARAMS>, startWith: Observable<LceState<DATA>> = Observable.empty(), ioScheduler: Scheduler = Schedulers.trampoline(), logger: Logger? = null): LceModel<DATA, PARAMS>","description":"com.motorro.rxlcemodel.base.LceModel.Companion.cacheThenNet","location":"base/com.motorro.rxlcemodel.base/-lce-model/-companion/cache-then-net.html","searchKeys":["cacheThenNet","fun <DATA : Any, PARAMS : Any> cacheThenNet(params: PARAMS, net: NetService<DATA, PARAMS>, cache: CacheService<DATA, PARAMS>, startWith: Observable<LceState<DATA>> = Observable.empty(), ioScheduler: Scheduler = Schedulers.trampoline(), logger: Logger? = null): LceModel<DATA, PARAMS>","com.motorro.rxlcemodel.base.LceModel.Companion.cacheThenNet"]},{"name":"fun <DATA : Any, PARAMS : Any> cacheThenNet(params: PARAMS, serviceSet: ServiceSet<DATA, PARAMS>, startWith: Observable<LceState<DATA>> = Observable.empty(), ioScheduler: Scheduler = Schedulers.trampoline(), logger: Logger? = null): LceModel<DATA, PARAMS>","description":"com.motorro.rxlcemodel.base.LceModel.Companion.cacheThenNet","location":"base/com.motorro.rxlcemodel.base/-lce-model/-companion/cache-then-net.html","searchKeys":["cacheThenNet","fun <DATA : Any, PARAMS : Any> cacheThenNet(params: PARAMS, serviceSet: ServiceSet<DATA, PARAMS>, startWith: Observable<LceState<DATA>> = Observable.empty(), ioScheduler: Scheduler = Schedulers.trampoline(), logger: Logger? = null): LceModel<DATA, PARAMS>","com.motorro.rxlcemodel.base.LceModel.Companion.cacheThenNet"]},{"name":"fun <DATA : Any, UPDATE : Any, PARAMS : Any> LceModel<DATA, PARAMS>.withUpdates(serviceSet: UpdatingServiceSet<DATA, UPDATE, PARAMS>, ioScheduler: Scheduler = Schedulers.trampoline(), logger: Logger? = null): UpdatingLceModel<DATA, UPDATE, PARAMS>","description":"com.motorro.rxlcemodel.base.withUpdates","location":"base/com.motorro.rxlcemodel.base/with-updates.html","searchKeys":["withUpdates","fun <DATA : Any, UPDATE : Any, PARAMS : Any> LceModel<DATA, PARAMS>.withUpdates(serviceSet: UpdatingServiceSet<DATA, UPDATE, PARAMS>, ioScheduler: Scheduler = Schedulers.trampoline(), logger: Logger? = null): UpdatingLceModel<DATA, UPDATE, PARAMS>","com.motorro.rxlcemodel.base.withUpdates"]},{"name":"fun <DATA : Any, in UPDATE : Any, PARAMS : Any> UpdatingLceModelWrapper(upstream: LceModel<DATA, PARAMS>, serviceSet: UpdatingServiceSet<DATA, UPDATE, PARAMS>, ioScheduler: Scheduler, logger: Logger?)","description":"com.motorro.rxlcemodel.base.UpdatingLceModelWrapper.UpdatingLceModelWrapper","location":"base/com.motorro.rxlcemodel.base/-updating-lce-model-wrapper/-updating-lce-model-wrapper.html","searchKeys":["UpdatingLceModelWrapper","fun <DATA : Any, in UPDATE : Any, PARAMS : Any> UpdatingLceModelWrapper(upstream: LceModel<DATA, PARAMS>, serviceSet: UpdatingServiceSet<DATA, UPDATE, PARAMS>, ioScheduler: Scheduler, logger: Logger?)","com.motorro.rxlcemodel.base.UpdatingLceModelWrapper.UpdatingLceModelWrapper"]},{"name":"fun <DATA : Any> LceUseCase<DATA>.refreshed(): LceUseCase<DATA>","description":"com.motorro.rxlcemodel.base.refreshed","location":"base/com.motorro.rxlcemodel.base/refreshed.html","searchKeys":["refreshed","fun <DATA : Any> LceUseCase<DATA>.refreshed(): LceUseCase<DATA>","com.motorro.rxlcemodel.base.refreshed"]},{"name":"fun <DATA : Any> LceUseCase<DATA>.withRefresh(refreshStream: Observable<in Nothing>): Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.withRefresh","location":"base/com.motorro.rxlcemodel.base/with-refresh.html","searchKeys":["withRefresh","fun <DATA : Any> LceUseCase<DATA>.withRefresh(refreshStream: Observable<in Nothing>): Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.withRefresh"]},{"name":"fun <DATA : Any> Observable<LceState<DATA>>.getData(terminateOnError: (LceState.Error<DATA>) -> Boolean): Observable<DATA>","description":"com.motorro.rxlcemodel.base.getData","location":"base/com.motorro.rxlcemodel.base/get-data.html","searchKeys":["getData","fun <DATA : Any> Observable<LceState<DATA>>.getData(terminateOnError: (LceState.Error<DATA>) -> Boolean): Observable<DATA>","com.motorro.rxlcemodel.base.getData"]},{"name":"fun <DATA : Any> Observable<LceState<DATA>>.refreshed(refresh: Completable): Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.refreshed","location":"base/com.motorro.rxlcemodel.base/refreshed.html","searchKeys":["refreshed","fun <DATA : Any> Observable<LceState<DATA>>.refreshed(refresh: Completable): Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.refreshed"]},{"name":"fun <DATA : Any> Observable<LceState<DATA>>.terminateOnError(predicate: (LceState.Error<DATA>) -> Boolean): Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.terminateOnError","location":"base/com.motorro.rxlcemodel.base/terminate-on-error.html","searchKeys":["terminateOnError","fun <DATA : Any> Observable<LceState<DATA>>.terminateOnError(predicate: (LceState.Error<DATA>) -> Boolean): Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.terminateOnError"]},{"name":"fun <DATA_1 : Any, DATA_2 : Any, PARAMS : Any> LceModel<DATA_1, PARAMS>.map(mapper: (data: DATA_1) -> DATA_2): LceModel<DATA_2, PARAMS>","description":"com.motorro.rxlcemodel.base.map","location":"base/com.motorro.rxlcemodel.base/map.html","searchKeys":["map","fun <DATA_1 : Any, DATA_2 : Any, PARAMS : Any> LceModel<DATA_1, PARAMS>.map(mapper: (data: DATA_1) -> DATA_2): LceModel<DATA_2, PARAMS>","com.motorro.rxlcemodel.base.map"]},{"name":"fun <DATA_1 : Any, DATA_2 : Any> LceUseCase<DATA_1>.map(mapper: (data: DATA_1) -> DATA_2): LceUseCase<DATA_2>","description":"com.motorro.rxlcemodel.base.map","location":"base/com.motorro.rxlcemodel.base/map.html","searchKeys":["map","fun <DATA_1 : Any, DATA_2 : Any> LceUseCase<DATA_1>.map(mapper: (data: DATA_1) -> DATA_2): LceUseCase<DATA_2>","com.motorro.rxlcemodel.base.map"]},{"name":"fun <DATA_1 : Any, DATA_2 : Any> Observable<LceState<DATA_1>>.flatMapSingleData(mapper: (data: DATA_1) -> Single<DATA_2>): Observable<LceState<DATA_2>>","description":"com.motorro.rxlcemodel.base.flatMapSingleData","location":"base/com.motorro.rxlcemodel.base/flat-map-single-data.html","searchKeys":["flatMapSingleData","fun <DATA_1 : Any, DATA_2 : Any> Observable<LceState<DATA_1>>.flatMapSingleData(mapper: (data: DATA_1) -> Single<DATA_2>): Observable<LceState<DATA_2>>","com.motorro.rxlcemodel.base.flatMapSingleData"]},{"name":"fun <T : Any> T.toEntity(validator: EntityValidator): Entity.Impl<T>","description":"com.motorro.rxlcemodel.base.entity.toEntity","location":"base/com.motorro.rxlcemodel.base.entity/to-entity.html","searchKeys":["toEntity","fun <T : Any> T.toEntity(validator: EntityValidator): Entity.Impl<T>","com.motorro.rxlcemodel.base.entity.toEntity"]},{"name":"fun <out DATA : Any> Content(data: DATA, dataIsValid: Boolean)","description":"com.motorro.rxlcemodel.base.LceState.Content.Content","location":"base/com.motorro.rxlcemodel.base/-lce-state/-content/-content.html","searchKeys":["Content","fun <out DATA : Any> Content(data: DATA, dataIsValid: Boolean)","com.motorro.rxlcemodel.base.LceState.Content.Content"]},{"name":"fun <out DATA : Any> Error(data: DATA?, dataIsValid: Boolean, error: Throwable)","description":"com.motorro.rxlcemodel.base.LceState.Error.Error","location":"base/com.motorro.rxlcemodel.base/-lce-state/-error/-error.html","searchKeys":["Error","fun <out DATA : Any> Error(data: DATA?, dataIsValid: Boolean, error: Throwable)","com.motorro.rxlcemodel.base.LceState.Error.Error"]},{"name":"fun <out DATA : Any> Loading(data: DATA?, dataIsValid: Boolean, type: LceState.Loading.Type = Type.LOADING)","description":"com.motorro.rxlcemodel.base.LceState.Loading.Loading","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/-loading.html","searchKeys":["Loading","fun <out DATA : Any> Loading(data: DATA?, dataIsValid: Boolean, type: LceState.Loading.Type = Type.LOADING)","com.motorro.rxlcemodel.base.LceState.Loading.Loading"]},{"name":"fun <out T : Any> Impl(data: T, validator: EntityValidator)","description":"com.motorro.rxlcemodel.base.entity.Entity.Impl.Impl","location":"base/com.motorro.rxlcemodel.base.entity/-entity/-impl/-impl.html","searchKeys":["Impl","fun <out T : Any> Impl(data: T, validator: EntityValidator)","com.motorro.rxlcemodel.base.entity.Entity.Impl.Impl"]},{"name":"fun Lifespan(ttl: Long, clock: Clock = Clock.SYSTEM)","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.Lifespan","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-lifespan.html","searchKeys":["Lifespan","fun Lifespan(ttl: Long, clock: Clock = Clock.SYSTEM)","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.Lifespan"]},{"name":"fun LifespanDeserializer(clock: Clock = Clock.SYSTEM)","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.LifespanDeserializer","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-lifespan-deserializer/-lifespan-deserializer.html","searchKeys":["LifespanDeserializer","fun LifespanDeserializer(clock: Clock = Clock.SYSTEM)","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.LifespanDeserializer"]},{"name":"fun LifespanValidatorFactory(cacheTtl: Long, clock: Clock = Clock.SYSTEM)","description":"com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory.LifespanValidatorFactory","location":"base/com.motorro.rxlcemodel.base.entity/-lifespan-validator-factory/-lifespan-validator-factory.html","searchKeys":["LifespanValidatorFactory","fun LifespanValidatorFactory(cacheTtl: Long, clock: Clock = Clock.SYSTEM)","com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory.LifespanValidatorFactory"]},{"name":"fun MemorySyncDelegate()","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.MemorySyncDelegate","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/-memory-sync-delegate.html","searchKeys":["MemorySyncDelegate","fun MemorySyncDelegate()","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.MemorySyncDelegate"]},{"name":"fun Simple(valid: Boolean)","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.Simple","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-simple/-simple.html","searchKeys":["Simple","fun Simple(valid: Boolean)","com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.Simple"]},{"name":"fun createSnapshot(ttl: Long, clock: Clock = Clock.SYSTEM): EntityValidator.Lifespan","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.Companion.createSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-companion/create-snapshot.html","searchKeys":["createSnapshot","fun createSnapshot(ttl: Long, clock: Clock = Clock.SYSTEM): EntityValidator.Lifespan","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.Companion.createSnapshot"]},{"name":"fun interface Logger","description":"com.motorro.rxlcemodel.base.Logger","location":"base/com.motorro.rxlcemodel.base/-logger/index.html","searchKeys":["Logger","fun interface Logger","com.motorro.rxlcemodel.base.Logger"]},{"name":"fun toError(error: Throwable): LceState.Error<DATA>","description":"com.motorro.rxlcemodel.base.LceState.toError","location":"base/com.motorro.rxlcemodel.base/-lce-state/to-error.html","searchKeys":["toError","fun toError(error: Throwable): LceState.Error<DATA>","com.motorro.rxlcemodel.base.LceState.toError"]},{"name":"fun toLoading(type: LceState.Loading.Type = Loading.Type.LOADING): LceState.Loading<DATA>","description":"com.motorro.rxlcemodel.base.LceState.toLoading","location":"base/com.motorro.rxlcemodel.base/-lce-state/to-loading.html","searchKeys":["toLoading","fun toLoading(type: LceState.Loading.Type = Loading.Type.LOADING): LceState.Loading<DATA>","com.motorro.rxlcemodel.base.LceState.toLoading"]},{"name":"fun update(dataSource: (params: PARAMS) -> Single<out Entity<DATA>>): Completable","description":"com.motorro.rxlcemodel.base.StrategyUpdateWrapper.update","location":"base/com.motorro.rxlcemodel.base/-strategy-update-wrapper/update.html","searchKeys":["update","fun update(dataSource: (params: PARAMS) -> Single<out Entity<DATA>>): Completable","com.motorro.rxlcemodel.base.StrategyUpdateWrapper.update"]},{"name":"inline fun <D : Any, P : Any> SyncDelegateCacheService.Delegate<D, CacheFriend>.makeFriendParams(crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.base.service.makeFriendParams","location":"base/com.motorro.rxlcemodel.base.service/make-friend-params.html","searchKeys":["makeFriendParams","inline fun <D : Any, P : Any> SyncDelegateCacheService.Delegate<D, CacheFriend>.makeFriendParams(crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.base.service.makeFriendParams"]},{"name":"inline fun <D : Any, P : Any> SyncDelegateCacheService.Delegate<D, String>.stringifyParams(crossinline stringify: P.() -> String = { toString() }): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.base.service.stringifyParams","location":"base/com.motorro.rxlcemodel.base.service/stringify-params.html","searchKeys":["stringifyParams","inline fun <D : Any, P : Any> SyncDelegateCacheService.Delegate<D, String>.stringifyParams(crossinline stringify: P.() -> String = { toString() }): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.base.service.stringifyParams"]},{"name":"inline fun <DATA : Any> LceState<DATA>.mapEmptyData(crossinline block: (LceState<DATA>) -> LceState<DATA>): LceState<DATA>","description":"com.motorro.rxlcemodel.base.mapEmptyData","location":"base/com.motorro.rxlcemodel.base/map-empty-data.html","searchKeys":["mapEmptyData","inline fun <DATA : Any> LceState<DATA>.mapEmptyData(crossinline block: (LceState<DATA>) -> LceState<DATA>): LceState<DATA>","com.motorro.rxlcemodel.base.mapEmptyData"]},{"name":"inline fun <DATA : Any> LceState<DATA>.mapEmptyDataItem(crossinline block: () -> DATA?): LceState<DATA>","description":"com.motorro.rxlcemodel.base.mapEmptyDataItem","location":"base/com.motorro.rxlcemodel.base/map-empty-data-item.html","searchKeys":["mapEmptyDataItem","inline fun <DATA : Any> LceState<DATA>.mapEmptyDataItem(crossinline block: () -> DATA?): LceState<DATA>","com.motorro.rxlcemodel.base.mapEmptyDataItem"]},{"name":"inline fun <DATA : Any> Observable<LceState<DATA>>.onEmptyLoadingReturn(crossinline block: (LceState.Loading<DATA>) -> LceState<DATA>): Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.onEmptyLoadingReturn","location":"base/com.motorro.rxlcemodel.base/on-empty-loading-return.html","searchKeys":["onEmptyLoadingReturn","inline fun <DATA : Any> Observable<LceState<DATA>>.onEmptyLoadingReturn(crossinline block: (LceState.Loading<DATA>) -> LceState<DATA>): Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.onEmptyLoadingReturn"]},{"name":"inline fun <DATA : Any> Observable<LceState<DATA>>.onEmptyLoadingReturnItem(crossinline block: () -> DATA?): Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.onEmptyLoadingReturnItem","location":"base/com.motorro.rxlcemodel.base/on-empty-loading-return-item.html","searchKeys":["onEmptyLoadingReturnItem","inline fun <DATA : Any> Observable<LceState<DATA>>.onEmptyLoadingReturnItem(crossinline block: () -> DATA?): Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.onEmptyLoadingReturnItem"]},{"name":"inline fun <DATA_1 : Any, DATA_2 : Any, DATA_3 : Any> LceState<DATA_1>.combine(other: LceState<DATA_2>, mapper: (data1: DATA_1?, data2: DATA_2?) -> DATA_3?): LceState<DATA_3>","description":"com.motorro.rxlcemodel.base.combine","location":"base/com.motorro.rxlcemodel.base/combine.html","searchKeys":["combine","inline fun <DATA_1 : Any, DATA_2 : Any, DATA_3 : Any> LceState<DATA_1>.combine(other: LceState<DATA_2>, mapper: (data1: DATA_1?, data2: DATA_2?) -> DATA_3?): LceState<DATA_3>","com.motorro.rxlcemodel.base.combine"]},{"name":"inline fun <DATA_1 : Any, DATA_2 : Any> LceState<DATA_1>.catchToLce(block: LceState<DATA_1>.() -> LceState<DATA_2>): LceState<DATA_2>","description":"com.motorro.rxlcemodel.base.catchToLce","location":"base/com.motorro.rxlcemodel.base/catch-to-lce.html","searchKeys":["catchToLce","inline fun <DATA_1 : Any, DATA_2 : Any> LceState<DATA_1>.catchToLce(block: LceState<DATA_1>.() -> LceState<DATA_2>): LceState<DATA_2>","com.motorro.rxlcemodel.base.catchToLce"]},{"name":"inline fun <DATA_1 : Any, DATA_2 : Any> LceState<DATA_1>.map(mapper: (data: DATA_1) -> DATA_2): LceState<DATA_2>","description":"com.motorro.rxlcemodel.base.map","location":"base/com.motorro.rxlcemodel.base/map.html","searchKeys":["map","inline fun <DATA_1 : Any, DATA_2 : Any> LceState<DATA_1>.map(mapper: (data: DATA_1) -> DATA_2): LceState<DATA_2>","com.motorro.rxlcemodel.base.map"]},{"name":"inline fun <T : Any> Observable<LceState<T>>.errorToLce(crossinline errorData: (Throwable) -> T? = { null }): Observable<LceState<T>>","description":"com.motorro.rxlcemodel.base.errorToLce","location":"base/com.motorro.rxlcemodel.base/error-to-lce.html","searchKeys":["errorToLce","inline fun <T : Any> Observable<LceState<T>>.errorToLce(crossinline errorData: (Throwable) -> T? = { null }): Observable<LceState<T>>","com.motorro.rxlcemodel.base.errorToLce"]},{"name":"interface CacheDelegateSerializerDeserializer<D : Any>","description":"com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer","location":"base/com.motorro.rxlcemodel.base.service/-cache-delegate-serializer-deserializer/index.html","searchKeys":["CacheDelegateSerializerDeserializer","interface CacheDelegateSerializerDeserializer<D : Any>","com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer"]},{"name":"interface CacheFriend","description":"com.motorro.rxlcemodel.base.service.CacheFriend","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend/index.html","searchKeys":["CacheFriend","interface CacheFriend","com.motorro.rxlcemodel.base.service.CacheFriend"]},{"name":"interface CacheManager","description":"com.motorro.rxlcemodel.base.service.CacheManager","location":"base/com.motorro.rxlcemodel.base.service/-cache-manager/index.html","searchKeys":["CacheManager","interface CacheManager","com.motorro.rxlcemodel.base.service.CacheManager"]},{"name":"interface CacheService<D : Any, in P : Any>","description":"com.motorro.rxlcemodel.base.service.CacheService","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/index.html","searchKeys":["CacheService","interface CacheService<D : Any, in P : Any>","com.motorro.rxlcemodel.base.service.CacheService"]},{"name":"interface Clock","description":"com.motorro.rxlcemodel.base.entity.Clock","location":"base/com.motorro.rxlcemodel.base.entity/-clock/index.html","searchKeys":["Clock","interface Clock","com.motorro.rxlcemodel.base.entity.Clock"]},{"name":"interface Delegate<D : Any, P : Any>","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/-delegate/index.html","searchKeys":["Delegate","interface Delegate<D : Any, P : Any>","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.Delegate"]},{"name":"interface Deserializer","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Deserializer","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-deserializer/index.html","searchKeys":["Deserializer","interface Deserializer","com.motorro.rxlcemodel.base.entity.EntityValidator.Deserializer"]},{"name":"interface Entity<out T : Any> : EntityValidator","description":"com.motorro.rxlcemodel.base.entity.Entity","location":"base/com.motorro.rxlcemodel.base.entity/-entity/index.html","searchKeys":["Entity","interface Entity<out T : Any> : EntityValidator","com.motorro.rxlcemodel.base.entity.Entity"]},{"name":"interface EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidator","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/index.html","searchKeys":["EntityValidator","interface EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidator"]},{"name":"interface EntityValidatorFactory","description":"com.motorro.rxlcemodel.base.entity.EntityValidatorFactory","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator-factory/index.html","searchKeys":["EntityValidatorFactory","interface EntityValidatorFactory","com.motorro.rxlcemodel.base.entity.EntityValidatorFactory"]},{"name":"interface LceModel<DATA : Any, PARAMS : Any> : LceUseCase<DATA> ","description":"com.motorro.rxlcemodel.base.LceModel","location":"base/com.motorro.rxlcemodel.base/-lce-model/index.html","searchKeys":["LceModel","interface LceModel<DATA : Any, PARAMS : Any> : LceUseCase<DATA> ","com.motorro.rxlcemodel.base.LceModel"]},{"name":"interface LceUseCase<DATA : Any>","description":"com.motorro.rxlcemodel.base.LceUseCase","location":"base/com.motorro.rxlcemodel.base/-lce-use-case/index.html","searchKeys":["LceUseCase","interface LceUseCase<DATA : Any>","com.motorro.rxlcemodel.base.LceUseCase"]},{"name":"interface NetService<D : Any, in P : Any>","description":"com.motorro.rxlcemodel.base.service.NetService","location":"base/com.motorro.rxlcemodel.base.service/-net-service/index.html","searchKeys":["NetService","interface NetService<D : Any, in P : Any>","com.motorro.rxlcemodel.base.service.NetService"]},{"name":"interface ServiceSet<D : Any, in P : Any>","description":"com.motorro.rxlcemodel.base.service.ServiceSet","location":"base/com.motorro.rxlcemodel.base.service/-service-set/index.html","searchKeys":["ServiceSet","interface ServiceSet<D : Any, in P : Any>","com.motorro.rxlcemodel.base.service.ServiceSet"]},{"name":"interface UpdatingLceModel<DATA : Any, in UPDATE : Any, PARAMS : Any> : LceModel<DATA, PARAMS> ","description":"com.motorro.rxlcemodel.base.UpdatingLceModel","location":"base/com.motorro.rxlcemodel.base/-updating-lce-model/index.html","searchKeys":["UpdatingLceModel","interface UpdatingLceModel<DATA : Any, in UPDATE : Any, PARAMS : Any> : LceModel<DATA, PARAMS> ","com.motorro.rxlcemodel.base.UpdatingLceModel"]},{"name":"interface UpdatingNetService<D : Any, in U : Any, in P : Any> : NetService<D, P> ","description":"com.motorro.rxlcemodel.base.service.UpdatingNetService","location":"base/com.motorro.rxlcemodel.base.service/-updating-net-service/index.html","searchKeys":["UpdatingNetService","interface UpdatingNetService<D : Any, in U : Any, in P : Any> : NetService<D, P> ","com.motorro.rxlcemodel.base.service.UpdatingNetService"]},{"name":"interface UpdatingServiceSet<D : Any, in U : Any, in P : Any> : ServiceSet<D, P> ","description":"com.motorro.rxlcemodel.base.service.UpdatingServiceSet","location":"base/com.motorro.rxlcemodel.base.service/-updating-service-set/index.html","searchKeys":["UpdatingServiceSet","interface UpdatingServiceSet<D : Any, in U : Any, in P : Any> : ServiceSet<D, P> ","com.motorro.rxlcemodel.base.service.UpdatingServiceSet"]},{"name":"object Always : EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Always","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-always/index.html","searchKeys":["Always","object Always : EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidator.Always"]},{"name":"object AlwaysDeserializer : EntityValidator.Deserializer","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Always.AlwaysDeserializer","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-always/-always-deserializer/index.html","searchKeys":["AlwaysDeserializer","object AlwaysDeserializer : EntityValidator.Deserializer","com.motorro.rxlcemodel.base.entity.EntityValidator.Always.AlwaysDeserializer"]},{"name":"object Companion","description":"com.motorro.rxlcemodel.base.LceModel.Companion","location":"base/com.motorro.rxlcemodel.base/-lce-model/-companion/index.html","searchKeys":["Companion","object Companion","com.motorro.rxlcemodel.base.LceModel.Companion"]},{"name":"object Companion","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.Companion","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-companion/index.html","searchKeys":["Companion","object Companion","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.Companion"]},{"name":"object Companion","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.Companion","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-lifespan-deserializer/-companion/index.html","searchKeys":["Companion","object Companion","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.Companion"]},{"name":"object Companion","description":"com.motorro.rxlcemodel.base.service.CacheService.Companion","location":"base/com.motorro.rxlcemodel.base.service/-cache-service/-companion/index.html","searchKeys":["Companion","object Companion","com.motorro.rxlcemodel.base.service.CacheService.Companion"]},{"name":"object Companion","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/-companion/index.html","searchKeys":["Companion","object Companion","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.Companion"]},{"name":"object Never : EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Never","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-never/index.html","searchKeys":["Never","object Never : EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidator.Never"]},{"name":"object NeverDeserializer : EntityValidator.Deserializer","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Never.NeverDeserializer","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-never/-never-deserializer/index.html","searchKeys":["NeverDeserializer","object NeverDeserializer : EntityValidator.Deserializer","com.motorro.rxlcemodel.base.entity.EntityValidator.Never.NeverDeserializer"]},{"name":"object SYSTEM : Clock","description":"com.motorro.rxlcemodel.base.entity.Clock.SYSTEM","location":"base/com.motorro.rxlcemodel.base.entity/-clock/-s-y-s-t-e-m/index.html","searchKeys":["SYSTEM","object SYSTEM : Clock","com.motorro.rxlcemodel.base.entity.Clock.SYSTEM"]},{"name":"object SimpleDeserializer : EntityValidator.Deserializer","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.SimpleDeserializer","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-simple/-simple-deserializer/index.html","searchKeys":["SimpleDeserializer","object SimpleDeserializer : EntityValidator.Deserializer","com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.SimpleDeserializer"]},{"name":"object Terminated : LceState<Nothing> ","description":"com.motorro.rxlcemodel.base.LceState.Terminated","location":"base/com.motorro.rxlcemodel.base/-lce-state/-terminated/index.html","searchKeys":["Terminated","object Terminated : LceState<Nothing> ","com.motorro.rxlcemodel.base.LceState.Terminated"]},{"name":"open fun createSnapshot(): EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.createSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/create-snapshot.html","searchKeys":["createSnapshot","open fun createSnapshot(): EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidator.createSnapshot"]},{"name":"open fun deserializeSnapshot(serialized: String): EntityValidator?","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Deserializer.deserializeSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-deserializer/deserialize-snapshot.html","searchKeys":["deserializeSnapshot","open fun deserializeSnapshot(serialized: String): EntityValidator?","com.motorro.rxlcemodel.base.entity.EntityValidator.Deserializer.deserializeSnapshot"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.motorro.rxlcemodel.base.LceState.Terminated.equals","location":"base/com.motorro.rxlcemodel.base/-lce-state/-terminated/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.motorro.rxlcemodel.base.LceState.Terminated.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.equals","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.equals"]},{"name":"open override fun <R : Any> map(mapper: (T) -> R): Entity<R>","description":"com.motorro.rxlcemodel.base.entity.Entity.Impl.map","location":"base/com.motorro.rxlcemodel.base.entity/-entity/-impl/map.html","searchKeys":["map","open override fun <R : Any> map(mapper: (T) -> R): Entity<R>","com.motorro.rxlcemodel.base.entity.Entity.Impl.map"]},{"name":"open override fun create(serialized: String?): EntityValidator","description":"com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory.create","location":"base/com.motorro.rxlcemodel.base.entity/-lifespan-validator-factory/create.html","searchKeys":["create","open override fun create(serialized: String?): EntityValidator","com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory.create"]},{"name":"open override fun createSnapshot(): Entity<T>","description":"com.motorro.rxlcemodel.base.entity.Entity.Impl.createSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity/-impl/create-snapshot.html","searchKeys":["createSnapshot","open override fun createSnapshot(): Entity<T>","com.motorro.rxlcemodel.base.entity.Entity.Impl.createSnapshot"]},{"name":"open override fun createSnapshot(): EntityValidator","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.createSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/create-snapshot.html","searchKeys":["createSnapshot","open override fun createSnapshot(): EntityValidator","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.createSnapshot"]},{"name":"open override fun createSnapshot(serialized: String?): EntityValidator","description":"com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory.createSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-lifespan-validator-factory/create-snapshot.html","searchKeys":["createSnapshot","open override fun createSnapshot(serialized: String?): EntityValidator","com.motorro.rxlcemodel.base.entity.LifespanValidatorFactory.createSnapshot"]},{"name":"open override fun delete(params: P)","description":"com.motorro.rxlcemodel.base.service.CacheFriendDelegate.delete","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend-delegate/delete.html","searchKeys":["delete","open override fun delete(params: P)","com.motorro.rxlcemodel.base.service.CacheFriendDelegate.delete"]},{"name":"open override fun delete(params: P)","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.delete","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/delete.html","searchKeys":["delete","open override fun delete(params: P)","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.delete"]},{"name":"open override fun delete(params: P): Completable","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.delete","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/delete.html","searchKeys":["delete","open override fun delete(params: P): Completable","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.delete"]},{"name":"open override fun deserialize(serialized: String): EntityValidator?","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Always.AlwaysDeserializer.deserialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-always/-always-deserializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String): EntityValidator?","com.motorro.rxlcemodel.base.entity.EntityValidator.Always.AlwaysDeserializer.deserialize"]},{"name":"open override fun deserialize(serialized: String): EntityValidator?","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.deserialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-lifespan-deserializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String): EntityValidator?","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.deserialize"]},{"name":"open override fun deserialize(serialized: String): EntityValidator?","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Never.NeverDeserializer.deserialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-never/-never-deserializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String): EntityValidator?","com.motorro.rxlcemodel.base.entity.EntityValidator.Never.NeverDeserializer.deserialize"]},{"name":"open override fun deserialize(serialized: String): EntityValidator?","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.SimpleDeserializer.deserialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-simple/-simple-deserializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String): EntityValidator?","com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.SimpleDeserializer.deserialize"]},{"name":"open override fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<D>?","description":"com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream.deserializeSnapshot","location":"base/com.motorro.rxlcemodel.base.service/-cache-delegate-serializer-deserializer/-with-object-stream/deserialize-snapshot.html","searchKeys":["deserializeSnapshot","open override fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<D>?","com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream.deserializeSnapshot"]},{"name":"open override fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<DataWithCacheKey<D>>?","description":"com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey.deserializeSnapshot","location":"base/com.motorro.rxlcemodel.base.service/-with-object-stream-and-cache-key/deserialize-snapshot.html","searchKeys":["deserializeSnapshot","open override fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<DataWithCacheKey<D>>?","com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey.deserializeSnapshot"]},{"name":"open override fun deserializeSnapshot(serialized: String): EntityValidator?","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.deserializeSnapshot","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/-lifespan-deserializer/deserialize-snapshot.html","searchKeys":["deserializeSnapshot","open override fun deserializeSnapshot(serialized: String): EntityValidator?","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.LifespanDeserializer.deserializeSnapshot"]},{"name":"open override fun get(params: P): Entity<D>?","description":"com.motorro.rxlcemodel.base.service.CacheFriendDelegate.get","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend-delegate/get.html","searchKeys":["get","open override fun get(params: P): Entity<D>?","com.motorro.rxlcemodel.base.service.CacheFriendDelegate.get"]},{"name":"open override fun get(params: P): Entity<D>?","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.get","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/get.html","searchKeys":["get","open override fun get(params: P): Entity<D>?","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.get"]},{"name":"open override fun getData(params: P): Observable<Optional<Entity<D>>>","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.getData","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/get-data.html","searchKeys":["getData","open override fun getData(params: P): Observable<Optional<Entity<D>>>","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.getData"]},{"name":"open override fun getMillis(): Long","description":"com.motorro.rxlcemodel.base.entity.Clock.SYSTEM.getMillis","location":"base/com.motorro.rxlcemodel.base.entity/-clock/-s-y-s-t-e-m/get-millis.html","searchKeys":["getMillis","open override fun getMillis(): Long","com.motorro.rxlcemodel.base.entity.Clock.SYSTEM.getMillis"]},{"name":"open override fun hashCode(): Int","description":"com.motorro.rxlcemodel.base.LceState.Terminated.hashCode","location":"base/com.motorro.rxlcemodel.base/-lce-state/-terminated/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.motorro.rxlcemodel.base.LceState.Terminated.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.hashCode","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.hashCode"]},{"name":"open override fun invalidate(params: P)","description":"com.motorro.rxlcemodel.base.service.CacheFriendDelegate.invalidate","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend-delegate/invalidate.html","searchKeys":["invalidate","open override fun invalidate(params: P)","com.motorro.rxlcemodel.base.service.CacheFriendDelegate.invalidate"]},{"name":"open override fun invalidate(params: P)","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.invalidate","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/invalidate.html","searchKeys":["invalidate","open override fun invalidate(params: P)","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.invalidate"]},{"name":"open override fun invalidate(params: P): Completable","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.invalidate","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/invalidate.html","searchKeys":["invalidate","open override fun invalidate(params: P): Completable","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.invalidate"]},{"name":"open override fun invalidateAll()","description":"com.motorro.rxlcemodel.base.service.CacheFriendDelegate.invalidateAll","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend-delegate/invalidate-all.html","searchKeys":["invalidateAll","open override fun invalidateAll()","com.motorro.rxlcemodel.base.service.CacheFriendDelegate.invalidateAll"]},{"name":"open override fun invalidateAll()","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.invalidateAll","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/invalidate-all.html","searchKeys":["invalidateAll","open override fun invalidateAll()","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.invalidateAll"]},{"name":"open override fun isValid(): Boolean","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Always.isValid","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-always/is-valid.html","searchKeys":["isValid","open override fun isValid(): Boolean","com.motorro.rxlcemodel.base.entity.EntityValidator.Always.isValid"]},{"name":"open override fun isValid(): Boolean","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.isValid","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/is-valid.html","searchKeys":["isValid","open override fun isValid(): Boolean","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.isValid"]},{"name":"open override fun isValid(): Boolean","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Never.isValid","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-never/is-valid.html","searchKeys":["isValid","open override fun isValid(): Boolean","com.motorro.rxlcemodel.base.entity.EntityValidator.Never.isValid"]},{"name":"open override fun isValid(): Boolean","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.isValid","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-simple/is-valid.html","searchKeys":["isValid","open override fun isValid(): Boolean","com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.isValid"]},{"name":"open override fun refetch(params: P): Completable","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.refetch","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/refetch.html","searchKeys":["refetch","open override fun refetch(params: P): Completable","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.refetch"]},{"name":"open override fun save(params: P, entity: Entity<D>)","description":"com.motorro.rxlcemodel.base.service.CacheFriendDelegate.save","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend-delegate/save.html","searchKeys":["save","open override fun save(params: P, entity: Entity<D>)","com.motorro.rxlcemodel.base.service.CacheFriendDelegate.save"]},{"name":"open override fun save(params: P, entity: Entity<D>)","description":"com.motorro.rxlcemodel.base.service.MemorySyncDelegate.save","location":"base/com.motorro.rxlcemodel.base.service/-memory-sync-delegate/save.html","searchKeys":["save","open override fun save(params: P, entity: Entity<D>)","com.motorro.rxlcemodel.base.service.MemorySyncDelegate.save"]},{"name":"open override fun save(params: P, entity: Entity<D>): Completable","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.save","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/save.html","searchKeys":["save","open override fun save(params: P, entity: Entity<D>): Completable","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.save"]},{"name":"open override fun serialize(): String","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Always.serialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-always/serialize.html","searchKeys":["serialize","open override fun serialize(): String","com.motorro.rxlcemodel.base.entity.EntityValidator.Always.serialize"]},{"name":"open override fun serialize(): String","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.serialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/serialize.html","searchKeys":["serialize","open override fun serialize(): String","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.serialize"]},{"name":"open override fun serialize(): String","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Never.serialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-never/serialize.html","searchKeys":["serialize","open override fun serialize(): String","com.motorro.rxlcemodel.base.entity.EntityValidator.Never.serialize"]},{"name":"open override fun serialize(): String","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.serialize","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-simple/serialize.html","searchKeys":["serialize","open override fun serialize(): String","com.motorro.rxlcemodel.base.entity.EntityValidator.Simple.serialize"]},{"name":"open override fun serialize(entity: Entity<D>, output: OutputStream)","description":"com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream.serialize","location":"base/com.motorro.rxlcemodel.base.service/-cache-delegate-serializer-deserializer/-with-object-stream/serialize.html","searchKeys":["serialize","open override fun serialize(entity: Entity<D>, output: OutputStream)","com.motorro.rxlcemodel.base.service.CacheDelegateSerializerDeserializer.WithObjectStream.serialize"]},{"name":"open override fun serialize(entity: Entity<DataWithCacheKey<D>>, output: OutputStream)","description":"com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey.serialize","location":"base/com.motorro.rxlcemodel.base.service/-with-object-stream-and-cache-key/serialize.html","searchKeys":["serialize","open override fun serialize(entity: Entity<DataWithCacheKey<D>>, output: OutputStream)","com.motorro.rxlcemodel.base.service.WithObjectStreamAndCacheKey.serialize"]},{"name":"open override fun toString(): String","description":"com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.toString","location":"base/com.motorro.rxlcemodel.base.entity/-entity-validator/-lifespan/to-string.html","searchKeys":["toString","open override fun toString(): String","com.motorro.rxlcemodel.base.entity.EntityValidator.Lifespan.toString"]},{"name":"open override fun update(update: UPDATE): Completable","description":"com.motorro.rxlcemodel.base.UpdatingLceModelWrapper.update","location":"base/com.motorro.rxlcemodel.base/-updating-lce-model-wrapper/update.html","searchKeys":["update","open override fun update(update: UPDATE): Completable","com.motorro.rxlcemodel.base.UpdatingLceModelWrapper.update"]},{"name":"open override val data: DATA","description":"com.motorro.rxlcemodel.base.LceState.Content.data","location":"base/com.motorro.rxlcemodel.base/-lce-state/-content/data.html","searchKeys":["data","open override val data: DATA","com.motorro.rxlcemodel.base.LceState.Content.data"]},{"name":"open override val data: DATA?","description":"com.motorro.rxlcemodel.base.LceState.Error.data","location":"base/com.motorro.rxlcemodel.base/-lce-state/-error/data.html","searchKeys":["data","open override val data: DATA?","com.motorro.rxlcemodel.base.LceState.Error.data"]},{"name":"open override val data: DATA?","description":"com.motorro.rxlcemodel.base.LceState.Loading.data","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/data.html","searchKeys":["data","open override val data: DATA?","com.motorro.rxlcemodel.base.LceState.Loading.data"]},{"name":"open override val data: Nothing? = null","description":"com.motorro.rxlcemodel.base.LceState.Terminated.data","location":"base/com.motorro.rxlcemodel.base/-lce-state/-terminated/data.html","searchKeys":["data","open override val data: Nothing? = null","com.motorro.rxlcemodel.base.LceState.Terminated.data"]},{"name":"open override val data: T","description":"com.motorro.rxlcemodel.base.entity.Entity.Impl.data","location":"base/com.motorro.rxlcemodel.base.entity/-entity/-impl/data.html","searchKeys":["data","open override val data: T","com.motorro.rxlcemodel.base.entity.Entity.Impl.data"]},{"name":"open override val dataIsValid: Boolean","description":"com.motorro.rxlcemodel.base.LceState.Content.dataIsValid","location":"base/com.motorro.rxlcemodel.base/-lce-state/-content/data-is-valid.html","searchKeys":["dataIsValid","open override val dataIsValid: Boolean","com.motorro.rxlcemodel.base.LceState.Content.dataIsValid"]},{"name":"open override val dataIsValid: Boolean","description":"com.motorro.rxlcemodel.base.LceState.Error.dataIsValid","location":"base/com.motorro.rxlcemodel.base/-lce-state/-error/data-is-valid.html","searchKeys":["dataIsValid","open override val dataIsValid: Boolean","com.motorro.rxlcemodel.base.LceState.Error.dataIsValid"]},{"name":"open override val dataIsValid: Boolean","description":"com.motorro.rxlcemodel.base.LceState.Loading.dataIsValid","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/data-is-valid.html","searchKeys":["dataIsValid","open override val dataIsValid: Boolean","com.motorro.rxlcemodel.base.LceState.Loading.dataIsValid"]},{"name":"open override val dataIsValid: Boolean = false","description":"com.motorro.rxlcemodel.base.LceState.Terminated.dataIsValid","location":"base/com.motorro.rxlcemodel.base/-lce-state/-terminated/data-is-valid.html","searchKeys":["dataIsValid","open override val dataIsValid: Boolean = false","com.motorro.rxlcemodel.base.LceState.Terminated.dataIsValid"]},{"name":"open override val invalidateAll: Completable","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.invalidateAll","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/invalidate-all.html","searchKeys":["invalidateAll","open override val invalidateAll: Completable","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.invalidateAll"]},{"name":"open override val params: PARAMS","description":"com.motorro.rxlcemodel.base.CacheThenNetLceModel.params","location":"base/com.motorro.rxlcemodel.base/-cache-then-net-lce-model/params.html","searchKeys":["params","open override val params: PARAMS","com.motorro.rxlcemodel.base.CacheThenNetLceModel.params"]},{"name":"open override val refetchAll: Completable","description":"com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.refetchAll","location":"base/com.motorro.rxlcemodel.base.service/-sync-delegate-cache-service/refetch-all.html","searchKeys":["refetchAll","open override val refetchAll: Completable","com.motorro.rxlcemodel.base.service.SyncDelegateCacheService.refetchAll"]},{"name":"open override val refresh: Completable","description":"com.motorro.rxlcemodel.base.CacheThenNetLceModel.refresh","location":"base/com.motorro.rxlcemodel.base/-cache-then-net-lce-model/refresh.html","searchKeys":["refresh","open override val refresh: Completable","com.motorro.rxlcemodel.base.CacheThenNetLceModel.refresh"]},{"name":"open override val state: Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.CacheThenNetLceModel.state","location":"base/com.motorro.rxlcemodel.base/-cache-then-net-lce-model/state.html","searchKeys":["state","open override val state: Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.CacheThenNetLceModel.state"]},{"name":"open override val state: Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.UpdateWrapper.state","location":"base/com.motorro.rxlcemodel.base/-update-wrapper/state.html","searchKeys":["state","open override val state: Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.UpdateWrapper.state"]},{"name":"open val cacheKey: String","description":"com.motorro.rxlcemodel.base.service.CacheFriend.cacheKey","location":"base/com.motorro.rxlcemodel.base.service/-cache-friend/cache-key.html","searchKeys":["cacheKey","open val cacheKey: String","com.motorro.rxlcemodel.base.service.CacheFriend.cacheKey"]},{"name":"sealed class LceState<out DATA : Any>","description":"com.motorro.rxlcemodel.base.LceState","location":"base/com.motorro.rxlcemodel.base/-lce-state/index.html","searchKeys":["LceState","sealed class LceState<out DATA : Any>","com.motorro.rxlcemodel.base.LceState"]},{"name":"val <DATA : Any> Observable<LceState<DATA>>.dataNoErrors: Observable<DATA>","description":"com.motorro.rxlcemodel.base.dataNoErrors","location":"base/com.motorro.rxlcemodel.base/data-no-errors.html","searchKeys":["dataNoErrors","val <DATA : Any> Observable<LceState<DATA>>.dataNoErrors: Observable<DATA>","com.motorro.rxlcemodel.base.dataNoErrors"]},{"name":"val <DATA : Any> Observable<LceState<DATA>>.dataStopOnEmptyErrors: Observable<DATA>","description":"com.motorro.rxlcemodel.base.dataStopOnEmptyErrors","location":"base/com.motorro.rxlcemodel.base/data-stop-on-empty-errors.html","searchKeys":["dataStopOnEmptyErrors","val <DATA : Any> Observable<LceState<DATA>>.dataStopOnEmptyErrors: Observable<DATA>","com.motorro.rxlcemodel.base.dataStopOnEmptyErrors"]},{"name":"val <DATA : Any> Observable<LceState<DATA>>.dataStopOnErrors: Observable<DATA>","description":"com.motorro.rxlcemodel.base.dataStopOnErrors","location":"base/com.motorro.rxlcemodel.base/data-stop-on-errors.html","searchKeys":["dataStopOnErrors","val <DATA : Any> Observable<LceState<DATA>>.dataStopOnErrors: Observable<DATA>","com.motorro.rxlcemodel.base.dataStopOnErrors"]},{"name":"val <DATA : Any> Observable<LceState<DATA>>.stopOnEmptyErrors: Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.stopOnEmptyErrors","location":"base/com.motorro.rxlcemodel.base/stop-on-empty-errors.html","searchKeys":["stopOnEmptyErrors","val <DATA : Any> Observable<LceState<DATA>>.stopOnEmptyErrors: Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.stopOnEmptyErrors"]},{"name":"val <DATA : Any> Observable<LceState<DATA>>.stopOnErrors: Observable<LceState<DATA>>","description":"com.motorro.rxlcemodel.base.stopOnErrors","location":"base/com.motorro.rxlcemodel.base/stop-on-errors.html","searchKeys":["stopOnErrors","val <DATA : Any> Observable<LceState<DATA>>.stopOnErrors: Observable<LceState<DATA>>","com.motorro.rxlcemodel.base.stopOnErrors"]},{"name":"val <DATA : Any> Observable<LceState<DATA>>.validData: Observable<DATA>","description":"com.motorro.rxlcemodel.base.validData","location":"base/com.motorro.rxlcemodel.base/valid-data.html","searchKeys":["validData","val <DATA : Any> Observable<LceState<DATA>>.validData: Observable<DATA>","com.motorro.rxlcemodel.base.validData"]},{"name":"val cacheKey: String","description":"com.motorro.rxlcemodel.base.service.DataWithCacheKey.cacheKey","location":"base/com.motorro.rxlcemodel.base.service/-data-with-cache-key/cache-key.html","searchKeys":["cacheKey","val cacheKey: String","com.motorro.rxlcemodel.base.service.DataWithCacheKey.cacheKey"]},{"name":"val data: D","description":"com.motorro.rxlcemodel.base.service.DataWithCacheKey.data","location":"base/com.motorro.rxlcemodel.base.service/-data-with-cache-key/data.html","searchKeys":["data","val data: D","com.motorro.rxlcemodel.base.service.DataWithCacheKey.data"]},{"name":"val error: Throwable","description":"com.motorro.rxlcemodel.base.LceState.Error.error","location":"base/com.motorro.rxlcemodel.base/-lce-state/-error/error.html","searchKeys":["error","val error: Throwable","com.motorro.rxlcemodel.base.LceState.Error.error"]},{"name":"val type: LceState.Loading.Type","description":"com.motorro.rxlcemodel.base.LceState.Loading.type","location":"base/com.motorro.rxlcemodel.base/-lce-state/-loading/type.html","searchKeys":["type","val type: LceState.Loading.Type","com.motorro.rxlcemodel.base.LceState.Loading.type"]},{"name":"class KotlinCacheDelegateSerializer<D : Any>(validatorFactory: EntityValidatorFactory, kSerializer: KSerializer<D>, binaryFormat: BinaryFormat) : CacheDelegateSerializerDeserializer<D> ","description":"com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer","location":"kserializer/com.motorro.rxlcemodel.kserializer/-kotlin-cache-delegate-serializer/index.html","searchKeys":["KotlinCacheDelegateSerializer","class KotlinCacheDelegateSerializer<D : Any>(validatorFactory: EntityValidatorFactory, kSerializer: KSerializer<D>, binaryFormat: BinaryFormat) : CacheDelegateSerializerDeserializer<D> ","com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer"]},{"name":"data class DataWithCacheKeySerializer<D : Any>(val dataSerializer: KSerializer<D>) : KSerializer<DataWithCacheKey<D>> ","description":"com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer","location":"kserializer/com.motorro.rxlcemodel.kserializer/-data-with-cache-key-serializer/index.html","searchKeys":["DataWithCacheKeySerializer","data class DataWithCacheKeySerializer<D : Any>(val dataSerializer: KSerializer<D>) : KSerializer<DataWithCacheKey<D>> ","com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer"]},{"name":"fun <D : Any> DataWithCacheKeySerializer(dataSerializer: KSerializer<D>)","description":"com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.DataWithCacheKeySerializer","location":"kserializer/com.motorro.rxlcemodel.kserializer/-data-with-cache-key-serializer/-data-with-cache-key-serializer.html","searchKeys":["DataWithCacheKeySerializer","fun <D : Any> DataWithCacheKeySerializer(dataSerializer: KSerializer<D>)","com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.DataWithCacheKeySerializer"]},{"name":"fun <D : Any> KotlinCacheDelegateSerializer(validatorFactory: EntityValidatorFactory, kSerializer: KSerializer<D>, binaryFormat: BinaryFormat)","description":"com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer.KotlinCacheDelegateSerializer","location":"kserializer/com.motorro.rxlcemodel.kserializer/-kotlin-cache-delegate-serializer/-kotlin-cache-delegate-serializer.html","searchKeys":["KotlinCacheDelegateSerializer","fun <D : Any> KotlinCacheDelegateSerializer(validatorFactory: EntityValidatorFactory, kSerializer: KSerializer<D>, binaryFormat: BinaryFormat)","com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer.KotlinCacheDelegateSerializer"]},{"name":"inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlin(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.kserializer.withKotlin","location":"kserializer/com.motorro.rxlcemodel.kserializer/with-kotlin.html","searchKeys":["withKotlin","inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlin(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.kserializer.withKotlin"]},{"name":"inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlinNormalized(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.kserializer.withKotlinNormalized","location":"kserializer/com.motorro.rxlcemodel.kserializer/with-kotlin-normalized.html","searchKeys":["withKotlinNormalized","inline fun <D : Any, P : Any> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlinNormalized(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java), crossinline stringify: P.() -> String): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.kserializer.withKotlinNormalized"]},{"name":"inline fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlin(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.kserializer.withKotlin","location":"kserializer/com.motorro.rxlcemodel.kserializer/with-kotlin.html","searchKeys":["withKotlin","inline fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlin(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.kserializer.withKotlin"]},{"name":"inline fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlinNormalized(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","description":"com.motorro.rxlcemodel.kserializer.withKotlinNormalized","location":"kserializer/com.motorro.rxlcemodel.kserializer/with-kotlin-normalized.html","searchKeys":["withKotlinNormalized","inline fun <D : Any, P : CacheFriend> DiskLruCacheSyncDelegate.DiskLruCacheProvider.withKotlinNormalized(validatorFactory: EntityValidatorFactory, serializer: KSerializer<D>, binaryFormat: BinaryFormat = Cbor, prefix: String = createDefaultDelegatePrefix(D::class.java)): SyncDelegateCacheService.Delegate<D, P>","com.motorro.rxlcemodel.kserializer.withKotlinNormalized"]},{"name":"open override fun deserialize(decoder: Decoder): DataWithCacheKey<D>","description":"com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.deserialize","location":"kserializer/com.motorro.rxlcemodel.kserializer/-data-with-cache-key-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): DataWithCacheKey<D>","com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.deserialize"]},{"name":"open override fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<D>?","description":"com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer.deserializeSnapshot","location":"kserializer/com.motorro.rxlcemodel.kserializer/-kotlin-cache-delegate-serializer/deserialize-snapshot.html","searchKeys":["deserializeSnapshot","open override fun deserializeSnapshot(input: InputStream, length: Long, invalidated: Boolean): Entity<D>?","com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer.deserializeSnapshot"]},{"name":"open override fun serialize(encoder: Encoder, value: DataWithCacheKey<D>)","description":"com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.serialize","location":"kserializer/com.motorro.rxlcemodel.kserializer/-data-with-cache-key-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: DataWithCacheKey<D>)","com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.serialize"]},{"name":"open override fun serialize(entity: Entity<D>, output: OutputStream)","description":"com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer.serialize","location":"kserializer/com.motorro.rxlcemodel.kserializer/-kotlin-cache-delegate-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(entity: Entity<D>, output: OutputStream)","com.motorro.rxlcemodel.kserializer.KotlinCacheDelegateSerializer.serialize"]},{"name":"open override val descriptor: SerialDescriptor","description":"com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.descriptor","location":"kserializer/com.motorro.rxlcemodel.kserializer/-data-with-cache-key-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.descriptor"]},{"name":"val dataSerializer: KSerializer<D>","description":"com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.dataSerializer","location":"kserializer/com.motorro.rxlcemodel.kserializer/-data-with-cache-key-serializer/data-serializer.html","searchKeys":["dataSerializer","val dataSerializer: KSerializer<D>","com.motorro.rxlcemodel.kserializer.DataWithCacheKeySerializer.dataSerializer"]}]