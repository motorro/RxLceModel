/*
 * Copyright 2021 Nikolai Kotchetkov.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *    http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'maven-publish'
    id 'signing'
}

android {
    compileSdk androidCompileSdkVersion
    buildToolsVersion = androidBuildToolsVersion

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions.unitTests.includeAndroidResources = true
    namespace 'com.motorro.rxlcemodel.viewmodel'

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':rx')

    implementation "androidx.core:core-ktx:${commonLibVersions.core_ktx_version}"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:${commonLibVersions.lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${commonLibVersions.lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${commonLibVersions.lifecycle_version}"

    testImplementation "junit:junit:${commonLibVersions.junit}"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${commonLibVersions.mockito_kotlin}"
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
}

dokkaJavadoc.configure {
    outputDirectory.set(new File("$buildDir/javadoc"))
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

def libId = 'viewmodel'
def libName = 'viewmodel'
def libDesc = 'Basic Android ViewModel for use with LCE use-cases'

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = rootProject.group
                artifactId = libId
                version = rootProject.version

                pom {
                    name = libName
                    description = libDesc
                    url = projectUrl
                    licenses {
                        license {
                            name = 'Apache-2.0'
                            url = 'https://apache.org/licenses/LICENSE-2.0'
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    scm {
                        connection = projectScm
                        developerConnection = projectScm
                        url = projectUrl
                    }
                }
            }
        }
        repositories {
            maven {
                name = "sonatype"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    signing {
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications
    }
}
